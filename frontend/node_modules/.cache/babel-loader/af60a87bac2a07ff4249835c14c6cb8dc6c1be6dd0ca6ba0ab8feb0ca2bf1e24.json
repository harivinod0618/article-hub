{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from './ViewPosts';\n\n// import axios from \"axios\";\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   Trash,\n//   Pencil,\n//   X,\n//   Save,\n// } from \"lucide-react\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editedTitle, setEditedTitle] = useState(\"\");\n//   const [editedContent, setEditedContent] = useState(\"\");\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDelete = async (postId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n//     try {\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\n//       setPosts(posts.filter((post) => post._id !== postId));\n//     } catch (err) {\n//       console.error(\"Failed to delete post:\", err);\n//       alert(\"❌ Failed to delete post\");\n//     }\n//   };\n\n//   const startEditing = (post) => {\n//     setEditingPostId(post._id);\n//     setEditedTitle(post.title);\n//     setEditedContent(post.content);\n//   };\n\n//   const cancelEditing = () => {\n//     setEditingPostId(null);\n//     setEditedTitle(\"\");\n//     setEditedContent(\"\");\n//   };\n\n//   const saveEdit = async (postId) => {\n//     try {\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\n//         title: editedTitle,\n//         content: editedContent,\n//       });\n//       setEditingPostId(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Failed to update post:\", err);\n//       alert(\"❌ Failed to update post\");\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//   return <ViewPosts />;\n\n//       case \"comments\":\n//         return <h2>View Comments on Your Posts</h2>;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//         </ul>\n//       </aside>\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from \"./ViewPosts\";\n\n// import axios from \"axios\";\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   LogOut,\n// } from \"lucide-react\";\n\n// import { auth } from \"../firebase\"; // adjust if needed\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     auth.signOut()\n//       .then(() => {\n//         console.log(\"User signed out\");\n//         navigate(\"/signin\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//         return <ViewPosts />;\n\n//       case \"comments\":\n//         return <h2>View Comments on Your Posts</h2>;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//           <li onClick={handleLogout} className=\"logout-btn\">\n//             <LogOut className=\"icon\" /> Logout\n//           </li>\n//         </ul>\n//       </aside>\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./AdminDashboard.css\";\nimport ViewPosts from \"./ViewPosts\";\nimport axios from \"axios\";\nimport { FilePlus, MessageSquareText, LayoutList, LogOut } from \"lucide-react\";\nimport { auth } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"upload\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    auth.signOut().then(() => {\n      console.log(\"User signed out\");\n      navigate(\"/signin\");\n    }).catch(error => {\n      console.error(\"Logout error:\", error);\n    });\n  };\n  const fetchPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/posts\");\n      setPosts(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch posts:\", err);\n    }\n  };\n  useEffect(() => {\n    if (selectedOption === \"view\") {\n      fetchPosts();\n    }\n  }, [selectedOption]);\n  const handleUpload = async () => {\n    if (!title || !content || !imageFile) {\n      alert(\"All fields are required.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"content\", content);\n      formData.append(\"image\", imageFile);\n      await axios.post(\"http://localhost:5000/api/posts\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"✅ Post uploaded successfully!\");\n      setTitle(\"\");\n      setContent(\"\");\n      setImageFile(null);\n      fetchPosts();\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"❌ Failed to upload post\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderContent = () => {\n    switch (selectedOption) {\n      case \"upload\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload a New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Post Title\",\n            className: \"input-field small-width\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Post Content\",\n            className: \"input-field small-width\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            className: \"input-field small-width\",\n            onChange: e => setImageFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), imageFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selected Image Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(imageFile),\n              alt: \"preview\",\n              style: {\n                maxWidth: \"200px\",\n                marginTop: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleUpload,\n            disabled: loading,\n            children: loading ? \"Uploading...\" : \"Submit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this);\n      case \"view\":\n        return /*#__PURE__*/_jsxDEV(ViewPosts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 16\n        }, this);\n      case \"comments\":\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View Comments on Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"menu-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"upload\"),\n          children: [/*#__PURE__*/_jsxDEV(FilePlus, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), \" Upload Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"view\"),\n          children: [/*#__PURE__*/_jsxDEV(LayoutList, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), \" View My Posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"comments\"),\n          children: [/*#__PURE__*/_jsxDEV(MessageSquareText, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), \" View Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: [/*#__PURE__*/_jsxDEV(LogOut, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), \" Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"jNfzjkHwFBYI/ctRMrDNINICed4=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ViewPosts","axios","FilePlus","MessageSquareText","LayoutList","LogOut","auth","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","selectedOption","setSelectedOption","title","setTitle","content","setContent","imageFile","setImageFile","loading","setLoading","posts","setPosts","navigate","handleLogout","signOut","then","console","log","catch","error","fetchPosts","res","get","data","err","handleUpload","alert","formData","FormData","append","post","headers","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","accept","files","src","URL","createObjectURL","alt","style","maxWidth","marginTop","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/AdminDashboard.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from './ViewPosts';\r\n\r\n// import axios from \"axios\";\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   Trash,\r\n//   Pencil,\r\n//   X,\r\n//   Save,\r\n// } from \"lucide-react\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [editingPostId, setEditingPostId] = useState(null);\r\n//   const [editedTitle, setEditedTitle] = useState(\"\");\r\n//   const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (postId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\r\n//       setPosts(posts.filter((post) => post._id !== postId));\r\n//     } catch (err) {\r\n//       console.error(\"Failed to delete post:\", err);\r\n//       alert(\"❌ Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (post) => {\r\n//     setEditingPostId(post._id);\r\n//     setEditedTitle(post.title);\r\n//     setEditedContent(post.content);\r\n//   };\r\n\r\n//   const cancelEditing = () => {\r\n//     setEditingPostId(null);\r\n//     setEditedTitle(\"\");\r\n//     setEditedContent(\"\");\r\n//   };\r\n\r\n//   const saveEdit = async (postId) => {\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\r\n//         title: editedTitle,\r\n//         content: editedContent,\r\n//       });\r\n//       setEditingPostId(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Failed to update post:\", err);\r\n//       alert(\"❌ Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n      \r\n\r\n//       case \"view\":\r\n//   return <ViewPosts />;\r\n\r\n\r\n\r\n//       case \"comments\":\r\n//         return <h2>View Comments on Your Posts</h2>;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from \"./ViewPosts\";\r\n\r\n// import axios from \"axios\";\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   LogOut,\r\n// } from \"lucide-react\";\r\n\r\n// import { auth } from \"../firebase\"; // adjust if needed\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     auth.signOut()\r\n//       .then(() => {\r\n//         console.log(\"User signed out\");\r\n//         navigate(\"/signin\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Logout error:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n//       case \"view\":\r\n//         return <ViewPosts />;\r\n\r\n//       case \"comments\":\r\n//         return <h2>View Comments on Your Posts</h2>;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//           <li onClick={handleLogout} className=\"logout-btn\">\r\n//             <LogOut className=\"icon\" /> Logout\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./AdminDashboard.css\";\r\nimport ViewPosts from \"./ViewPosts\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FilePlus,\r\n  MessageSquareText,\r\n  LayoutList,\r\n  LogOut,\r\n} from \"lucide-react\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AdminDashboard() {\r\n  const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut()\r\n      .then(() => {\r\n        console.log(\"User signed out\");\r\n        navigate(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Logout error:\", error);\r\n      });\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch posts:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedOption === \"view\") {\r\n      fetchPosts();\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const handleUpload = async () => {\r\n    if (!title || !content || !imageFile) {\r\n      alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", title);\r\n      formData.append(\"content\", content);\r\n      formData.append(\"image\", imageFile);\r\n\r\n      await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"✅ Post uploaded successfully!\");\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n      setImageFile(null);\r\n      fetchPosts();\r\n    } catch (err) {\r\n      console.error(\"Upload failed:\", err);\r\n      alert(\"❌ Failed to upload post\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (selectedOption) {\r\n      case \"upload\":\r\n        return (\r\n          <div className=\"upload-form\">\r\n            <h2>Upload a New Post</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Post Title\"\r\n              className=\"input-field small-width\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <br />\r\n            <textarea\r\n              placeholder=\"Post Content\"\r\n              className=\"input-field small-width\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            ></textarea>\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"input-field small-width\"\r\n              onChange={(e) => setImageFile(e.target.files[0])}\r\n            />\r\n            <br />\r\n            {imageFile && (\r\n              <div>\r\n                <p>Selected Image Preview:</p>\r\n                <img\r\n                  src={URL.createObjectURL(imageFile)}\r\n                  alt=\"preview\"\r\n                  style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n                />\r\n              </div>\r\n            )}\r\n            <br />\r\n            <button\r\n              className=\"submit-btn\"\r\n              onClick={handleUpload}\r\n              disabled={loading}\r\n            >\r\n              {loading ? \"Uploading...\" : \"Submit Post\"}\r\n            </button>\r\n          </div>\r\n        );\r\n\r\n      case \"view\":\r\n        return <ViewPosts />;\r\n\r\n      case \"comments\":\r\n        return <h2>View Comments on Your Posts</h2>;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <aside className=\"sidebar\">\r\n        <h1>Admin Panel</h1>\r\n        <ul className=\"menu-list\">\r\n          <li onClick={() => setSelectedOption(\"upload\")}>\r\n            <FilePlus className=\"icon\" /> Upload Post\r\n          </li>\r\n          <li onClick={() => setSelectedOption(\"view\")}>\r\n            <LayoutList className=\"icon\" /> View My Posts\r\n          </li>\r\n          <li onClick={() => setSelectedOption(\"comments\")}>\r\n            <MessageSquareText className=\"icon\" /> View Comments\r\n          </li>\r\n        </ul>\r\n\r\n        <button onClick={handleLogout} className=\"logout-btn\">\r\n          <LogOut className=\"icon\" /> Logout\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"content\">{renderContent()}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}