{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n// import { initializeApp } from 'firebase/app';\n// import { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n\n// // ✅ Your Firebase config — replace with yours if different\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDPfSUclIb-OnOUoK71kO0J4eBln1IbIpM\",\n//   authDomain: \"the-better-india-comments.firebaseapp.com\",\n//   projectId: \"the-better-india-comments\",\n//   storageBucket: \"the-better-india-comments.appspot.com\",\n//   messagingSenderId: \"760843686957\",\n//   appId: \"1:760843686957:web:0da41b2365e2598c4c94a4\",\n//   measurementId: \"G-YKF41C73YT\"\n// };\n\n// // ✅ Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app);\n// const provider = new GoogleAuthProvider();\n\n// function App() {\n//   const [user, setUser] = useState(null);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         const user = result.user;\n//         console.log('User signed in:', user);\n//         setUser(user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       {user ? (\n//         <AdminDashboard />\n//       ) : (\n//         <>\n//           <h1>Welcome to The Better India Comments</h1>\n//           <button className=\"google-btn\" onClick={signInWithGoogle}>\n//             <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//             Sign in with Google\n//           </button>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\n\n// ✅ Your Firebase config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPfSUclIb-OnOUoK71kO0J4eBln1IbIpM\",\n  authDomain: \"the-better-india-comments.firebaseapp.com\",\n  projectId: \"the-better-india-comments\",\n  storageBucket: \"the-better-india-comments.appspot.com\",\n  messagingSenderId: \"760843686957\",\n  appId: \"1:760843686957:web:0da41b2365e2598c4c94a4\",\n  measurementId: \"G-YKF41C73YT\"\n};\n\n// ✅ Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\n// ✅ Admin email\nconst ADMIN_EMAIL = \"hari1018vinod@gmail.com\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      const signedInUser = result.user;\n      setUser(signedInUser);\n      if (signedInUser.email === ADMIN_EMAIL) {\n        setIsAdmin(true);\n      } else {\n        setIsAdmin(false);\n      }\n    }).catch(error => {\n      console.error(\"Sign-in error:\", error);\n      alert(\"Google sign-in failed!\");\n    });\n  };\n  if (user && isAdmin) {\n    return /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to The Better India Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"google-btn\",\n      onClick: signInWithGoogle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: googleLogo,\n        alt: \"Google logo\",\n        className: \"google-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), \"Sign in with Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), user && !isAdmin && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: \"Access denied. You are not authorized to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0lfSPidxI3u4aTYlokRrouBgdp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","googleLogo","AdminDashboard","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","provider","ADMIN_EMAIL","App","_s","user","setUser","isAdmin","setIsAdmin","signInWithGoogle","then","result","signedInUser","email","catch","error","console","alert","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","src","alt","style","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import './App.css';\n// import { initializeApp } from 'firebase/app';\n// import { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n\n// // ✅ Your Firebase config — replace with yours if different\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDPfSUclIb-OnOUoK71kO0J4eBln1IbIpM\",\n//   authDomain: \"the-better-india-comments.firebaseapp.com\",\n//   projectId: \"the-better-india-comments\",\n//   storageBucket: \"the-better-india-comments.appspot.com\",\n//   messagingSenderId: \"760843686957\",\n//   appId: \"1:760843686957:web:0da41b2365e2598c4c94a4\",\n//   measurementId: \"G-YKF41C73YT\"\n// };\n\n// // ✅ Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app);\n// const provider = new GoogleAuthProvider();\n\n// function App() {\n//   const [user, setUser] = useState(null);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         const user = result.user;\n//         console.log('User signed in:', user);\n//         setUser(user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       {user ? (\n//         <AdminDashboard />\n//       ) : (\n//         <>\n//           <h1>Welcome to The Better India Comments</h1>\n//           <button className=\"google-btn\" onClick={signInWithGoogle}>\n//             <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//             Sign in with Google\n//           </button>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\n\n// ✅ Your Firebase config\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPfSUclIb-OnOUoK71kO0J4eBln1IbIpM\",\n  authDomain: \"the-better-india-comments.firebaseapp.com\",\n  projectId: \"the-better-india-comments\",\n  storageBucket: \"the-better-india-comments.appspot.com\",\n  messagingSenderId: \"760843686957\",\n  appId: \"1:760843686957:web:0da41b2365e2598c4c94a4\",\n  measurementId: \"G-YKF41C73YT\"\n};\n\n// ✅ Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\n// ✅ Admin email\nconst ADMIN_EMAIL = \"hari1018vinod@gmail.com\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        const signedInUser = result.user;\n        setUser(signedInUser);\n        if (signedInUser.email === ADMIN_EMAIL) {\n          setIsAdmin(true);\n        } else {\n          setIsAdmin(false);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Sign-in error:\", error);\n        alert(\"Google sign-in failed!\");\n      });\n  };\n\n  if (user && isAdmin) {\n    return <AdminDashboard user={user} />;\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1>Welcome to The Better India Comments</h1>\n      <button className=\"google-btn\" onClick={signInWithGoogle}>\n        <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n        Sign in with Google\n      </button>\n      {user && !isAdmin && (\n        <p style={{ color: 'red', marginTop: '20px' }}>\n          Access denied. You are not authorized to view this page.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}