{"ast":null,"code":"\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"../axiosConfig\";\n// import {\n//   BookOpen,\n//   ThumbsUp,\n//   MessageCircle,\n//   User,\n//   LogOut,\n//   Menu\n// } from \"lucide-react\";\n// import { getAuth, signOut } from \"firebase/auth\";\n// import \"./UserDashboard.css\";\n\n// function UserDashboard({ user }) {\n//   const [activeTab, setActiveTab] = useState(\"view-posts\");\n//   const [posts, setPosts] = useState([]);\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\n\n//   const isMobile = window.innerWidth <= 768;\n\n//   useEffect(() => {\n//     fetchPosts();\n//   }, []);\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"/api/posts\");\n//       setPosts(res.data);\n//     } catch (error) {\n//       console.error(\"Error fetching posts\", error);\n//     }\n//   };\n\n//   const handleLike = async (postId) => {\n//     try {\n//       await axios.post(`/api/posts/${postId}/like`, { userId: user.uid });\n//       fetchPosts();\n//     } catch (error) {\n//       console.error(\"Like failed\", error);\n//     }\n//   };\n\n//   const handleComment = async (postId, comment) => {\n//     if (!comment) return;\n//     try {\n//       await axios.post(`/api/posts/${postId}/comment`, {\n//         userId: user.uid,\n//         userName: user.displayName,\n//         text: comment\n//       });\n//       fetchPosts();\n//     } catch (error) {\n//       console.error(\"Comment failed\", error);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     const auth = getAuth();\n//     try {\n//       await signOut(auth);\n//       window.location.reload();\n//     } catch (error) {\n//       console.error(\"Logout failed\", error);\n//     }\n//   };\n\n//   const handleTabClick = (tab) => {\n//     setActiveTab(tab);\n//     if (isMobile) setSidebarOpen(false);\n//   };\n\n//   const filteredLikedPosts = posts.filter(post => post.likes.includes(user.uid));\n//   const filteredCommentedPosts = posts.filter(post =>\n//     post.comments.some(comment => comment.userId === user.uid)\n//   );\n\n//   return (\n//     <div className={`user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\n//       <button className=\"hamburger\" onClick={() => setSidebarOpen(!sidebarOpen)}>\n//         <Menu size={24} />\n//       </button>\n\n//       <aside className={`user-sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\n//         <h2 className=\"user-greeting\">Hello, {user.displayName}</h2>\n//         <ul className=\"user-menu\">\n//           <li onClick={() => handleTabClick(\"profile\")}><User size={18} /> <span>Profile</span></li>\n//           <li onClick={() => handleTabClick(\"view-posts\")}><BookOpen size={18} /> <span>View Posts</span></li>\n//           <li onClick={() => handleTabClick(\"liked-posts\")}><ThumbsUp size={18} /> <span>Liked Posts</span></li>\n//           <li onClick={() => handleTabClick(\"commented-posts\")}><MessageCircle size={18} /> <span>Commented Posts</span></li>\n//           <li onClick={handleLogout}><LogOut size={18} /> <span>Logout</span></li>\n//         </ul>\n//       </aside>\n\n//       <main className=\"user-content\">\n//         {activeTab === \"view-posts\" && (\n//           <>\n//             <h3>Admin Posts</h3>\n//             {posts.map((post) => (\n//               <PostCard\n//                 key={post._id}\n//                 post={post}\n//                 user={user}\n//                 onLike={handleLike}\n//                 onComment={handleComment}\n//               />\n//             ))}\n//           </>\n//         )}\n\n//         {activeTab === \"liked-posts\" && (\n//           <>\n//             <h3>Posts You've Liked</h3>\n//             {filteredLikedPosts.length > 0 ? (\n//               filteredLikedPosts.map((post) => (\n//                 <PostCard\n//                   key={post._id}\n//                   post={post}\n//                   user={user}\n//                   onLike={handleLike}\n//                   onComment={handleComment}\n//                 />\n//               ))\n//             ) : (\n//               <p>No liked posts yet.</p>\n//             )}\n//           </>\n//         )}\n\n//         {activeTab === \"commented-posts\" && (\n//           <>\n//             <h3>Posts You've Commented On</h3>\n//             {filteredCommentedPosts.length > 0 ? (\n//               filteredCommentedPosts.map((post) => (\n//                 <PostCard\n//                   key={post._id}\n//                   post={post}\n//                   user={user}\n//                   onLike={handleLike}\n//                   onComment={handleComment}\n//                 />\n//               ))\n//             ) : (\n//               <p>No commented posts yet.</p>\n//             )}\n//           </>\n//         )}\n\n//         {activeTab === \"profile\" && (\n//           <div>\n//             <h3>Profile Info</h3>\n//             <p><strong>Name:</strong> {user.displayName}</p>\n//             <p><strong>Email:</strong> {user.email}</p>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// function PostCard({ post, user, onLike, onComment }) {\n//   const [showCommentBox, setShowCommentBox] = useState(false);\n//   const [comment, setComment] = useState(\"\");\n\n//   const handleCommentSubmit = () => {\n//     if (!comment.trim()) return;\n//     onComment(post._id, comment);\n//     setComment(\"\");\n//     setShowCommentBox(false);\n//   };\n\n//   return (\n//     <div className=\"post-card\">\n//       <h4>{post.title}</h4>\n//       <p>{post.content}</p>\n//       {post.imageUrl && (\n//         <img\n//           src={`http://localhost:5000${post.imageUrl}`}\n//           alt=\"post\"\n//           className=\"post-image\"\n//         />\n//       )}\n//       <div className=\"button-group\" style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\n//         <button onClick={() => onLike(post._id)}>\n//           ‚ù§Ô∏è Like ({post.likes.length})\n//         </button>\n//         <button onClick={() => setShowCommentBox(!showCommentBox)}>\n//           üí¨ Comment\n//         </button>\n//       </div>\n\n//       {showCommentBox && (\n//         <div className=\"comment-box\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Write a comment...\"\n//             value={comment}\n//             onChange={(e) => setComment(e.target.value)}\n//           />\n//           <button onClick={handleCommentSubmit}>Post</button>\n//         </div>\n//       )}\n\n//       <div className=\"comments\">\n//         {post.comments.map((c, i) => (\n//           <p key={i}>\n//             <strong>{c.userName}</strong>: {c.text}\n//           </p>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default UserDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/UserDashboard.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"../axiosConfig\";\r\n// import {\r\n//   BookOpen,\r\n//   ThumbsUp,\r\n//   MessageCircle,\r\n//   User,\r\n//   LogOut,\r\n//   Menu\r\n// } from \"lucide-react\";\r\n// import { getAuth, signOut } from \"firebase/auth\";\r\n// import \"./UserDashboard.css\";\r\n\r\n// function UserDashboard({ user }) {\r\n//   const [activeTab, setActiveTab] = useState(\"view-posts\");\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n//   const isMobile = window.innerWidth <= 768;\r\n\r\n//   useEffect(() => {\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching posts\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLike = async (postId) => {\r\n//     try {\r\n//       await axios.post(`/api/posts/${postId}/like`, { userId: user.uid });\r\n//       fetchPosts();\r\n//     } catch (error) {\r\n//       console.error(\"Like failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleComment = async (postId, comment) => {\r\n//     if (!comment) return;\r\n//     try {\r\n//       await axios.post(`/api/posts/${postId}/comment`, {\r\n//         userId: user.uid,\r\n//         userName: user.displayName,\r\n//         text: comment\r\n//       });\r\n//       fetchPosts();\r\n//     } catch (error) {\r\n//       console.error(\"Comment failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     const auth = getAuth();\r\n//     try {\r\n//       await signOut(auth);\r\n//       window.location.reload();\r\n//     } catch (error) {\r\n//       console.error(\"Logout failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleTabClick = (tab) => {\r\n//     setActiveTab(tab);\r\n//     if (isMobile) setSidebarOpen(false);\r\n//   };\r\n\r\n//   const filteredLikedPosts = posts.filter(post => post.likes.includes(user.uid));\r\n//   const filteredCommentedPosts = posts.filter(post =>\r\n//     post.comments.some(comment => comment.userId === user.uid)\r\n//   );\r\n\r\n//   return (\r\n//     <div className={`user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n//       <button className=\"hamburger\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n//         <Menu size={24} />\r\n//       </button>\r\n\r\n//       <aside className={`user-sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n//         <h2 className=\"user-greeting\">Hello, {user.displayName}</h2>\r\n//         <ul className=\"user-menu\">\r\n//           <li onClick={() => handleTabClick(\"profile\")}><User size={18} /> <span>Profile</span></li>\r\n//           <li onClick={() => handleTabClick(\"view-posts\")}><BookOpen size={18} /> <span>View Posts</span></li>\r\n//           <li onClick={() => handleTabClick(\"liked-posts\")}><ThumbsUp size={18} /> <span>Liked Posts</span></li>\r\n//           <li onClick={() => handleTabClick(\"commented-posts\")}><MessageCircle size={18} /> <span>Commented Posts</span></li>\r\n//           <li onClick={handleLogout}><LogOut size={18} /> <span>Logout</span></li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       <main className=\"user-content\">\r\n//         {activeTab === \"view-posts\" && (\r\n//           <>\r\n//             <h3>Admin Posts</h3>\r\n//             {posts.map((post) => (\r\n//               <PostCard\r\n//                 key={post._id}\r\n//                 post={post}\r\n//                 user={user}\r\n//                 onLike={handleLike}\r\n//                 onComment={handleComment}\r\n//               />\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"liked-posts\" && (\r\n//           <>\r\n//             <h3>Posts You've Liked</h3>\r\n//             {filteredLikedPosts.length > 0 ? (\r\n//               filteredLikedPosts.map((post) => (\r\n//                 <PostCard\r\n//                   key={post._id}\r\n//                   post={post}\r\n//                   user={user}\r\n//                   onLike={handleLike}\r\n//                   onComment={handleComment}\r\n//                 />\r\n//               ))\r\n//             ) : (\r\n//               <p>No liked posts yet.</p>\r\n//             )}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"commented-posts\" && (\r\n//           <>\r\n//             <h3>Posts You've Commented On</h3>\r\n//             {filteredCommentedPosts.length > 0 ? (\r\n//               filteredCommentedPosts.map((post) => (\r\n//                 <PostCard\r\n//                   key={post._id}\r\n//                   post={post}\r\n//                   user={user}\r\n//                   onLike={handleLike}\r\n//                   onComment={handleComment}\r\n//                 />\r\n//               ))\r\n//             ) : (\r\n//               <p>No commented posts yet.</p>\r\n//             )}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"profile\" && (\r\n//           <div>\r\n//             <h3>Profile Info</h3>\r\n//             <p><strong>Name:</strong> {user.displayName}</p>\r\n//             <p><strong>Email:</strong> {user.email}</p>\r\n//           </div>\r\n//         )}\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function PostCard({ post, user, onLike, onComment }) {\r\n//   const [showCommentBox, setShowCommentBox] = useState(false);\r\n//   const [comment, setComment] = useState(\"\");\r\n\r\n//   const handleCommentSubmit = () => {\r\n//     if (!comment.trim()) return;\r\n//     onComment(post._id, comment);\r\n//     setComment(\"\");\r\n//     setShowCommentBox(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post-card\">\r\n//       <h4>{post.title}</h4>\r\n//       <p>{post.content}</p>\r\n//       {post.imageUrl && (\r\n//         <img\r\n//           src={`http://localhost:5000${post.imageUrl}`}\r\n//           alt=\"post\"\r\n//           className=\"post-image\"\r\n//         />\r\n//       )}\r\n//       <div className=\"button-group\" style={{ display: \"flex\", gap: \"10px\", marginTop: \"10px\" }}>\r\n//         <button onClick={() => onLike(post._id)}>\r\n//           ‚ù§Ô∏è Like ({post.likes.length})\r\n//         </button>\r\n//         <button onClick={() => setShowCommentBox(!showCommentBox)}>\r\n//           üí¨ Comment\r\n//         </button>\r\n//       </div>\r\n\r\n//       {showCommentBox && (\r\n//         <div className=\"comment-box\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Write a comment...\"\r\n//             value={comment}\r\n//             onChange={(e) => setComment(e.target.value)}\r\n//           />\r\n//           <button onClick={handleCommentSubmit}>Post</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"comments\">\r\n//         {post.comments.map((c, i) => (\r\n//           <p key={i}>\r\n//             <strong>{c.userName}</strong>: {c.text}\r\n//           </p>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserDashboard;\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}