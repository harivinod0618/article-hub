{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Pencil, Trash, Save, X } from \"lucide-react\";\n// import \"./ViewPosts.css\"; // Add styles specific to view section\n\n// const ViewPosts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editedTitle, setEditedTitle] = useState(\"\");\n//   const [editedContent, setEditedContent] = useState(\"\");\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPosts();\n//   }, []);\n\n//   const handleDelete = async (postId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n//     try {\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\n//       setPosts(posts.filter((post) => post._id !== postId));\n//     } catch (err) {\n//       console.error(\"Failed to delete post:\", err);\n//       alert(\"❌ Failed to delete post\");\n//     }\n//   };\n\n//   const startEditing = (post) => {\n//     setEditingPostId(post._id);\n//     setEditedTitle(post.title);\n//     setEditedContent(post.content);\n//   };\n\n//   const cancelEditing = () => {\n//     setEditingPostId(null);\n//     setEditedTitle(\"\");\n//     setEditedContent(\"\");\n//   };\n\n//   const saveEdit = async (postId) => {\n//     try {\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\n//         title: editedTitle,\n//         content: editedContent,\n//       });\n//       setEditingPostId(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Failed to update post:\", err);\n//       alert(\"❌ Failed to update post\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"view-posts\">\n//       <h2>My Uploaded Posts</h2>\n//       {posts.length === 0 ? (\n//         <p>No posts uploaded yet.</p>\n//       ) : (\n//         posts.map((post) => (\n//           <div key={post._id} className=\"post-card\">\n//             {editingPostId === post._id ? (\n//               <>\n//                 <input\n//                   type=\"text\"\n//                   value={editedTitle}\n//                   onChange={(e) => setEditedTitle(e.target.value)}\n//                   className=\"input-field\"\n//                 />\n//                 <textarea\n//                   value={editedContent}\n//                   onChange={(e) => setEditedContent(e.target.value)}\n//                   className=\"input-field\"\n//                 ></textarea>\n//                 <div className=\"button-group\">\n//                   <button className=\"btn save-btn\" onClick={() => saveEdit(post._id)}>\n//                     <Save size={16} /> Save\n//                   </button>\n//                   <button className=\"btn cancel-btn\" onClick={cancelEditing}>\n//                     <X size={16} /> Cancel\n//                   </button>\n//                 </div>\n//               </>\n//             ) : (\n//               <>\n//                 <h3>{post.title}</h3>\n//                 <p>{post.content}</p>\n//                 {post.imageUrl && (\n//                   <img\n//                     src={`http://localhost:5000${post.imageUrl}`}\n//                     alt={post.title}\n//                     className=\"post-image\"\n//                   />\n//                 )}\n//                 <div className=\"button-group\">\n//                   <button className=\"btn edit-btn\" onClick={() => startEditing(post)}>\n//                     <Pencil size={16} /> Edit\n//                   </button>\n//                   <button className=\"btn delete-btn\" onClick={() => handleDelete(post._id)}>\n//                     <Trash size={16} /> Delete\n//                   </button>\n//                 </div>\n//               </>\n//             )}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ViewPosts;","map":{"version":3,"names":[],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/ViewPosts.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Pencil, Trash, Save, X } from \"lucide-react\";\r\n// import \"./ViewPosts.css\"; // Add styles specific to view section\r\n\r\n// const ViewPosts = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [editingPostId, setEditingPostId] = useState(null);\r\n//   const [editedTitle, setEditedTitle] = useState(\"\");\r\n//   const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (postId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\r\n//       setPosts(posts.filter((post) => post._id !== postId));\r\n//     } catch (err) {\r\n//       console.error(\"Failed to delete post:\", err);\r\n//       alert(\"❌ Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (post) => {\r\n//     setEditingPostId(post._id);\r\n//     setEditedTitle(post.title);\r\n//     setEditedContent(post.content);\r\n//   };\r\n\r\n//   const cancelEditing = () => {\r\n//     setEditingPostId(null);\r\n//     setEditedTitle(\"\");\r\n//     setEditedContent(\"\");\r\n//   };\r\n\r\n//   const saveEdit = async (postId) => {\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\r\n//         title: editedTitle,\r\n//         content: editedContent,\r\n//       });\r\n//       setEditingPostId(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Failed to update post:\", err);\r\n//       alert(\"❌ Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"view-posts\">\r\n//       <h2>My Uploaded Posts</h2>\r\n//       {posts.length === 0 ? (\r\n//         <p>No posts uploaded yet.</p>\r\n//       ) : (\r\n//         posts.map((post) => (\r\n//           <div key={post._id} className=\"post-card\">\r\n//             {editingPostId === post._id ? (\r\n//               <>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={editedTitle}\r\n//                   onChange={(e) => setEditedTitle(e.target.value)}\r\n//                   className=\"input-field\"\r\n//                 />\r\n//                 <textarea\r\n//                   value={editedContent}\r\n//                   onChange={(e) => setEditedContent(e.target.value)}\r\n//                   className=\"input-field\"\r\n//                 ></textarea>\r\n//                 <div className=\"button-group\">\r\n//                   <button className=\"btn save-btn\" onClick={() => saveEdit(post._id)}>\r\n//                     <Save size={16} /> Save\r\n//                   </button>\r\n//                   <button className=\"btn cancel-btn\" onClick={cancelEditing}>\r\n//                     <X size={16} /> Cancel\r\n//                   </button>\r\n//                 </div>\r\n//               </>\r\n//             ) : (\r\n//               <>\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.content}</p>\r\n//                 {post.imageUrl && (\r\n//                   <img\r\n//                     src={`http://localhost:5000${post.imageUrl}`}\r\n//                     alt={post.title}\r\n//                     className=\"post-image\"\r\n//                   />\r\n//                 )}\r\n//                 <div className=\"button-group\">\r\n//                   <button className=\"btn edit-btn\" onClick={() => startEditing(post)}>\r\n//                     <Pencil size={16} /> Edit\r\n//                   </button>\r\n//                   <button className=\"btn delete-btn\" onClick={() => handleDelete(post._id)}>\r\n//                     <Trash size={16} /> Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewPosts;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}