{"ast":null,"code":"\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from './ViewPosts';\n\n// import axios from \"axios\";\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   Trash,\n//   Pencil,\n//   X,\n//   Save,\n// } from \"lucide-react\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editedTitle, setEditedTitle] = useState(\"\");\n//   const [editedContent, setEditedContent] = useState(\"\");\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDelete = async (postId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n//     try {\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\n//       setPosts(posts.filter((post) => post._id !== postId));\n//     } catch (err) {\n//       console.error(\"Failed to delete post:\", err);\n//       alert(\"❌ Failed to delete post\");\n//     }\n//   };\n\n//   const startEditing = (post) => {\n//     setEditingPostId(post._id);\n//     setEditedTitle(post.title);\n//     setEditedContent(post.content);\n//   };\n\n//   const cancelEditing = () => {\n//     setEditingPostId(null);\n//     setEditedTitle(\"\");\n//     setEditedContent(\"\");\n//   };\n\n//   const saveEdit = async (postId) => {\n//     try {\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\n//         title: editedTitle,\n//         content: editedContent,\n//       });\n//       setEditingPostId(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Failed to update post:\", err);\n//       alert(\"❌ Failed to update post\");\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//   return <ViewPosts />;\n\n//       case \"comments\":\n//         return <h2>View Comments on Your Posts</h2>;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//         </ul>\n//       </aside>\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from \"./ViewPosts\";\n\n// import axios from \"axios\";\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   LogOut,\n// } from \"lucide-react\";\n\n// import { auth } from \"../firebase\"; // adjust if needed\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     auth.signOut()\n//       .then(() => {\n//         console.log(\"User signed out\");\n//         navigate(\"/signin\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//         return <ViewPosts />;\n\n//       case \"comments\":\n//         return <h2>View Comments on Your Posts</h2>;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//           <li onClick={handleLogout} className=\"logout-btn\">\n//             <LogOut className=\"icon\" /> Logout\n//           </li>\n//         </ul>\n//       </aside>\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/AdminDashboard.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from './ViewPosts';\r\n\r\n// import axios from \"axios\";\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   Trash,\r\n//   Pencil,\r\n//   X,\r\n//   Save,\r\n// } from \"lucide-react\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [editingPostId, setEditingPostId] = useState(null);\r\n//   const [editedTitle, setEditedTitle] = useState(\"\");\r\n//   const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (postId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\r\n//       setPosts(posts.filter((post) => post._id !== postId));\r\n//     } catch (err) {\r\n//       console.error(\"Failed to delete post:\", err);\r\n//       alert(\"❌ Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (post) => {\r\n//     setEditingPostId(post._id);\r\n//     setEditedTitle(post.title);\r\n//     setEditedContent(post.content);\r\n//   };\r\n\r\n//   const cancelEditing = () => {\r\n//     setEditingPostId(null);\r\n//     setEditedTitle(\"\");\r\n//     setEditedContent(\"\");\r\n//   };\r\n\r\n//   const saveEdit = async (postId) => {\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\r\n//         title: editedTitle,\r\n//         content: editedContent,\r\n//       });\r\n//       setEditingPostId(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Failed to update post:\", err);\r\n//       alert(\"❌ Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n      \r\n\r\n//       case \"view\":\r\n//   return <ViewPosts />;\r\n\r\n\r\n\r\n//       case \"comments\":\r\n//         return <h2>View Comments on Your Posts</h2>;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from \"./ViewPosts\";\r\n\r\n// import axios from \"axios\";\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   LogOut,\r\n// } from \"lucide-react\";\r\n\r\n// import { auth } from \"../firebase\"; // adjust if needed\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     auth.signOut()\r\n//       .then(() => {\r\n//         console.log(\"User signed out\");\r\n//         navigate(\"/signin\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Logout error:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n//       case \"view\":\r\n//         return <ViewPosts />;\r\n\r\n//       case \"comments\":\r\n//         return <h2>View Comments on Your Posts</h2>;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//           <li onClick={handleLogout} className=\"logout-btn\">\r\n//             <LogOut className=\"icon\" /> Logout\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}