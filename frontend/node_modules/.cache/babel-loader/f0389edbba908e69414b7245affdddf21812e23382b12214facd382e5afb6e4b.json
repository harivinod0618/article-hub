{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import UpdateProfile from './components/UpdateProfile';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n\n//     return () => unsubscribe(); // cleanup\n//   }, []);\n\n//   // âœ… Check profile only after user is authenticated\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       try {\n//         if (user?.email && user.email !== \"hari1018vinod@gmail.com\") {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             navigate(\"/update-profile\");\n//           }\n//         }\n//       } catch (err) {\n//         console.error(\"Error checking profile:\", err);\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, navigate]);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   if (user) {\n//     return user.email === \"hari1018vinod@gmail.com\"\n//       ? <AdminDashboard user={user} handleLogout={handleLogout} />\n//       : <UserDashboard user={user} handleLogout={handleLogout} />;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth, provider } from './firebase';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\nimport UserDashboard from './components/UserDashboard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport UpdateProfile from './pages/UpdateProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdminVerified, setIsAdminVerified] = useState(false);\n  const [adminCode, setAdminCode] = useState('');\n  const [profileCompleted, setProfileCompleted] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const checkUserProfile = async () => {\n      if (user !== null && user !== void 0 && user.email && user.email !== \"hari1018vinod@gmail.com\") {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n          const userData = res.data;\n          if (!userData.profileCompleted) {\n            setProfileCompleted(false);\n            navigate(\"/update-profile\");\n          } else {\n            setProfileCompleted(true);\n            navigate(\"/user-dashboard\");\n          }\n        } catch (err) {\n          console.error(\"Error checking user profile:\", err);\n        }\n      }\n    };\n    if (user && user.email !== \"hari1018vinod@gmail.com\") {\n      checkUserProfile();\n    }\n  }, [user, navigate]);\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      console.log('User signed in:', result.user);\n    }).catch(error => {\n      console.error('Error during sign-in:', error);\n      alert('Sign-in failed');\n    });\n  };\n  const handleLogout = () => {\n    signOut(auth).then(() => {\n      console.log(\"User signed out\");\n      setUser(null);\n      setIsAdminVerified(false);\n      setAdminCode('');\n    }).catch(error => {\n      console.error(\"Logout error:\", error);\n    });\n  };\n  const handleAdminCodeSubmit = () => {\n    if (adminCode === '0618') {\n      setIsAdminVerified(true);\n    } else {\n      alert('Invalid admin code');\n    }\n  };\n\n  // If user is logged in\n  if (user) {\n    // Admin logic\n    if (user.email === \"hari1018vinod@gmail.com\") {\n      return isAdminVerified ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n        user: user,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-code-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Admin Access Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter 4-digit code\",\n          value: adminCode,\n          onChange: e => setAdminCode(e.target.value),\n          className: \"p-2 border mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdminCodeSubmit,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Non-admin user\n    return profileCompleted ? /*#__PURE__*/_jsxDEV(UserDashboard, {\n      user: user,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this) : null; // Already redirected to update-profile\n  }\n\n  // Not logged in\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to The Better India Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"google-btn\",\n      onClick: signInWithGoogle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: googleLogo,\n        alt: \"Google logo\",\n        className: \"google-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), \"Sign in with Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yjxLCtqBh97AJ9TmQG+nt+0ZHFU=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","signInWithPopup","onAuthStateChanged","signOut","auth","provider","googleLogo","AdminDashboard","UserDashboard","useNavigate","axios","UpdateProfile","jsxDEV","_jsxDEV","App","_s","user","setUser","isAdminVerified","setIsAdminVerified","adminCode","setAdminCode","profileCompleted","setProfileCompleted","navigate","unsubscribe","currentUser","checkUserProfile","email","res","get","userData","data","err","console","error","signInWithGoogle","then","result","log","catch","alert","handleLogout","handleAdminCodeSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import UpdateProfile from './components/UpdateProfile';\n\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n\n//     return () => unsubscribe(); // cleanup\n//   }, []);\n\n//   // âœ… Check profile only after user is authenticated\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       try {\n//         if (user?.email && user.email !== \"hari1018vinod@gmail.com\") {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             navigate(\"/update-profile\");\n//           }\n//         }\n//       } catch (err) {\n//         console.error(\"Error checking profile:\", err);\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, navigate]);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   if (user) {\n//     return user.email === \"hari1018vinod@gmail.com\"\n//       ? <AdminDashboard user={user} handleLogout={handleLogout} />\n//       : <UserDashboard user={user} handleLogout={handleLogout} />;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth, provider } from './firebase';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\nimport UserDashboard from './components/UserDashboard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport UpdateProfile from './pages/UpdateProfile';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isAdminVerified, setIsAdminVerified] = useState(false);\n  const [adminCode, setAdminCode] = useState('');\n  const [profileCompleted, setProfileCompleted] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    const checkUserProfile = async () => {\n      if (user?.email && user.email !== \"hari1018vinod@gmail.com\") {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n          const userData = res.data;\n\n          if (!userData.profileCompleted) {\n            setProfileCompleted(false);\n            navigate(\"/update-profile\");\n          } else {\n            setProfileCompleted(true);\n            navigate(\"/user-dashboard\");\n          }\n        } catch (err) {\n          console.error(\"Error checking user profile:\", err);\n        }\n      }\n    };\n\n    if (user && user.email !== \"hari1018vinod@gmail.com\") {\n      checkUserProfile();\n    }\n  }, [user, navigate]);\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        console.log('User signed in:', result.user);\n      })\n      .catch((error) => {\n        console.error('Error during sign-in:', error);\n        alert('Sign-in failed');\n      });\n  };\n\n  const handleLogout = () => {\n    signOut(auth)\n      .then(() => {\n        console.log(\"User signed out\");\n        setUser(null);\n        setIsAdminVerified(false);\n        setAdminCode('');\n      })\n      .catch((error) => {\n        console.error(\"Logout error:\", error);\n      });\n  };\n\n  const handleAdminCodeSubmit = () => {\n    if (adminCode === '0618') {\n      setIsAdminVerified(true);\n    } else {\n      alert('Invalid admin code');\n    }\n  };\n\n  // If user is logged in\n  if (user) {\n    // Admin logic\n    if (user.email === \"hari1018vinod@gmail.com\") {\n      return isAdminVerified ? (\n        <AdminDashboard user={user} handleLogout={handleLogout} />\n      ) : (\n        <div className=\"admin-code-container\">\n          <h2>Enter Admin Access Code</h2>\n          <input\n            type=\"password\"\n            placeholder=\"Enter 4-digit code\"\n            value={adminCode}\n            onChange={(e) => setAdminCode(e.target.value)}\n            className=\"p-2 border mb-4\"\n          />\n          <button onClick={handleAdminCodeSubmit} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Verify</button>\n        </div>\n      );\n    }\n\n    // Non-admin user\n    return profileCompleted ? (\n      <UserDashboard user={user} handleLogout={handleLogout} />\n    ) : null; // Already redirected to update-profile\n  }\n\n  // Not logged in\n  return (\n    <div className=\"app-container\">\n      <h1>Welcome to The Better India Comments</h1>\n      <button className=\"google-btn\" onClick={signInWithGoogle}>\n        <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n        Sign in with Google\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}