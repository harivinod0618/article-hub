{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"../axiosConfig\";\n// import {\n//   BookOpen,\n//   ThumbsUp,\n//   MessageCircle,\n//   User,\n//   LogOut,\n//   Menu,\n//   Heart\n// } from \"lucide-react\";\n// import { getAuth, signOut } from \"firebase/auth\";\n// import \"./UserDashboard.css\";\n\n// function UserDashboard({ user }) {\n//   const [activeTab, setActiveTab] = useState(\"view-posts\");\n//   const [posts, setPosts] = useState([]);\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\n\n//   const isMobile = window.innerWidth <= 768;\n\n//   useEffect(() => {\n//     fetchPosts();\n//   }, []);\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"/api/posts\");\n//       setPosts(res.data);\n//     } catch (error) {\n//       console.error(\"Error fetching posts\", error);\n//     }\n//   };\n\n//   const handleLike = async (postId) => {\n//     try {\n//       await axios.post(`/api/posts/${postId}/like`, { userId: user.uid });\n//       fetchPosts();\n//     } catch (error) {\n//       console.error(\"Like failed\", error);\n//     }\n//   };\n\n//   const handleComment = async (postId, comment) => {\n//     if (!comment) return;\n//     try {\n//       await axios.post(`/api/posts/${postId}/comment`, {\n//         userId: user.uid,\n//         userName: user.displayName,\n//         text: comment\n//       });\n//       fetchPosts();\n//     } catch (error) {\n//       console.error(\"Comment failed\", error);\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     const auth = getAuth();\n//     try {\n//       await signOut(auth);\n//       window.location.reload();\n//     } catch (error) {\n//       console.error(\"Logout failed\", error);\n//     }\n//   };\n\n//   const handleTabClick = (tab) => {\n//     setActiveTab(tab);\n//     if (isMobile) setSidebarOpen(false);\n//   };\n\n//   const filteredLikedPosts = posts.filter(post => post.likes.includes(user.uid));\n//   const filteredCommentedPosts = posts.filter(post =>\n//     post.comments.some(comment => comment.userId === user.uid)\n//   );\n\n//   return (\n//     <div className={`user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\n//       <button className=\"hamburger\" onClick={() => setSidebarOpen(!sidebarOpen)}>\n//         <Menu size={24} />\n//       </button>\n\n//       <aside className={`user-sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\n//         <h2 className=\"user-greeting\">Hello, {user.displayName}</h2>\n//         <ul className=\"user-menu\">\n//           <li onClick={() => handleTabClick(\"profile\")}><User size={18} /> <span>Profile</span></li>\n//           <li onClick={() => handleTabClick(\"view-posts\")}><BookOpen size={18} /> <span>View Posts</span></li>\n//           <li onClick={() => handleTabClick(\"liked-posts\")}><ThumbsUp size={18} /> <span>Liked Posts</span></li>\n//           <li onClick={() => handleTabClick(\"commented-posts\")}><MessageCircle size={18} /> <span>Commented Posts</span></li>\n//           <li onClick={handleLogout}><LogOut size={18} /> <span>Logout</span></li>\n//         </ul>\n//       </aside>\n\n//       <main className=\"user-content\">\n//         {activeTab === \"view-posts\" && (\n//           <>\n//             <h3>Admin Posts</h3>\n//             {posts.map((post) => (\n//               <PostCard\n//                 key={post._id}\n//                 post={post}\n//                 user={user}\n//                 onLike={handleLike}\n//                 onComment={handleComment}\n//               />\n//             ))}\n//           </>\n//         )}\n\n//         {activeTab === \"liked-posts\" && (\n//           <>\n//             <h3>Posts You've Liked</h3>\n//             {filteredLikedPosts.length > 0 ? (\n//               filteredLikedPosts.map((post) => (\n//                 <PostCard\n//                   key={post._id}\n//                   post={post}\n//                   user={user}\n//                   onLike={handleLike}\n//                   onComment={handleComment}\n//                 />\n//               ))\n//             ) : (\n//               <p>No liked posts yet.</p>\n//             )}\n//           </>\n//         )}\n\n//         {activeTab === \"commented-posts\" && (\n//           <>\n//             <h3>Posts You've Commented On</h3>\n//             {filteredCommentedPosts.length > 0 ? (\n//               filteredCommentedPosts.map((post) => (\n//                 <PostCard\n//                   key={post._id}\n//                   post={post}\n//                   user={user}\n//                   onLike={handleLike}\n//                   onComment={handleComment}\n//                 />\n//               ))\n//             ) : (\n//               <p>No commented posts yet.</p>\n//             )}\n//           </>\n//         )}\n\n//         {activeTab === \"profile\" && (\n//           <div>\n//             <h3>Profile Info</h3>\n//             <p><strong>Name:</strong> {user.displayName}</p>\n//             <p><strong>Email:</strong> {user.email}</p>\n//           </div>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// function PostCard({ post, user, onLike, onComment }) {\n//   const [showCommentInput, setShowCommentInput] = useState(false);\n\n//   return (\n//     <div className=\"post-card\">\n//       <h4>{post.title}</h4>\n//       <p>{post.content}</p>\n//       {post.imageUrl && (\n//         <img\n//           src={`http://localhost:5000${post.imageUrl}`}\n//           alt=\"post\"\n//           className=\"post-image\"\n//         />\n//       )}\n//       <div className=\"button-group\">\n//         <button\n//           className={`icon-button ${post.likes.includes(user.uid) ? \"liked\" : \"\"}`}\n//           onClick={() => onLike(post._id)}\n//           title=\"Like\"\n//         >\n//           <Heart\n//             className=\"icon\"\n//             size={24}\n//             color={post.likes.includes(user.uid) ? \"red\" : \"black\"}\n//             fill={post.likes.includes(user.uid) ? \"red\" : \"none\"}\n//           />\n//           <span className=\"like-count\">({post.likes.length})</span>\n//         </button>\n\n//         <button className=\"icon-button\" onClick={() => setShowCommentInput(!showCommentInput)} title=\"Comment\">\n//           <MessageCircle className=\"icon\" size={24} />\n//         </button>\n//       </div>\n\n//       {showCommentInput && (\n//         <CommentBox postId={post._id} onSubmit={onComment} />\n//       )}\n\n//       <div className=\"comments\">\n//         {post.comments.map((c, i) => (\n//           <p key={i}>\n//             <strong>{c.userName}</strong>: {c.text}\n//           </p>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// function CommentBox({ postId, onSubmit }) {\n//   const [comment, setComment] = useState(\"\");\n\n//   return (\n//     <div className=\"comment-box\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Add a comment\"\n//         value={comment}\n//         onChange={(e) => setComment(e.target.value)}\n//       />\n//       <button\n//         onClick={() => {\n//           onSubmit(postId, comment);\n//           setComment(\"\");\n//         }}\n//       >\n//         Send\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default UserDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../axiosConfig\";\nimport { BookOpen, ThumbsUp, MessageCircle, User, LogOut, Menu, Heart } from \"lucide-react\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport \"./UserDashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserDashboard({\n  user\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"view-posts\");\n  const [posts, setPosts] = useState([]);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    fetchPosts();\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const isMobile = windowWidth <= 768;\n  const fetchPosts = async () => {\n    try {\n      const res = await axios.get(\"/api/posts\");\n      setPosts(res.data);\n    } catch (error) {\n      console.error(\"Error fetching posts\", error);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      await axios.post(`/api/posts/${postId}/like`, {\n        userId: user.uid\n      });\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Like failed\", error);\n    }\n  };\n  const handleComment = async (postId, comment) => {\n    if (!comment.trim()) return;\n    try {\n      await axios.post(`/api/posts/${postId}/comment`, {\n        userId: user.uid,\n        userName: user.displayName,\n        text: comment.trim()\n      });\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Comment failed\", error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await signOut(getAuth());\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Logout failed\", error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n    if (isMobile) setSidebarOpen(false);\n  };\n  const filteredLikedPosts = posts.filter(post => post.likes.includes(user.uid));\n  const filteredCommentedPosts = posts.filter(post => post.comments.some(comment => comment.userId === user.uid));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`,\n    children: [isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"hamburger\",\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `user-sidebar ${sidebarOpen ? \"open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"user-greeting\",\n        children: [\"Hello, \", user.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleTabClick(\"profile\"),\n          children: [/*#__PURE__*/_jsxDEV(User, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleTabClick(\"view-posts\"),\n          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"View Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleTabClick(\"liked-posts\"),\n          children: [/*#__PURE__*/_jsxDEV(ThumbsUp, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Liked Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleTabClick(\"commented-posts\"),\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Commented Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(LogOut, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"user-content\",\n      children: [activeTab === \"view-posts\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          user: user,\n          onLike: handleLike,\n          onComment: handleComment\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true), activeTab === \"liked-posts\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Posts You've Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), filteredLikedPosts.length > 0 ? filteredLikedPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          user: user,\n          onLike: handleLike,\n          onComment: handleComment\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No liked posts yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), activeTab === \"commented-posts\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Posts You've Commented On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), filteredCommentedPosts.length > 0 ? filteredCommentedPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          user: user,\n          onLike: handleLike,\n          onComment: handleComment\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No commented posts yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), activeTab === \"profile\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 16\n          }, this), \" \", user.displayName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 16\n          }, this), \" \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"nL5bZmVQCz8wLUDWkjzo1yXHev0=\");\n_c = UserDashboard;\nfunction PostCard({\n  post,\n  user,\n  onLike,\n  onComment\n}) {\n  _s2();\n  const [showCommentInput, setShowCommentInput] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000${post.imageUrl}`,\n      alt: \"Post\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `icon-button ${post.likes.includes(user.uid) ? \"liked\" : \"\"}`,\n        onClick: () => onLike(post._id),\n        title: \"Like\",\n        children: [/*#__PURE__*/_jsxDEV(Heart, {\n          className: \"icon\",\n          size: 24,\n          color: post.likes.includes(user.uid) ? \"red\" : \"black\",\n          fill: post.likes.includes(user.uid) ? \"red\" : \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"like-count\",\n          children: [\"(\", post.likes.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon-button\",\n        onClick: () => setShowCommentInput(!showCommentInput),\n        title: \"Comment\",\n        children: /*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"icon\",\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), showCommentInput && /*#__PURE__*/_jsxDEV(CommentBox, {\n      postId: post._id,\n      onSubmit: onComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: post.comments.map((c, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: c.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 22\n        }, this), \": \", c.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n}\n_s2(PostCard, \"IO2gTaQxPxqiJWT6kDjR+ye4Axg=\");\n_c2 = PostCard;\nfunction CommentBox({\n  postId,\n  onSubmit\n}) {\n  _s3();\n  const [comment, setComment] = useState(\"\");\n  const handleSubmit = () => {\n    if (!comment.trim()) return;\n    onSubmit(postId, comment);\n    setComment(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a comment\",\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSubmit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n}\n_s3(CommentBox, \"rrFebW9Q28aJJ+M9AxcXUmcj4W0=\");\n_c3 = CommentBox;\nexport default UserDashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserDashboard\");\n$RefreshReg$(_c2, \"PostCard\");\n$RefreshReg$(_c3, \"CommentBox\");","map":{"version":3,"names":["React","useState","useEffect","axios","BookOpen","ThumbsUp","MessageCircle","User","LogOut","Menu","Heart","getAuth","signOut","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","user","_s","activeTab","setActiveTab","posts","setPosts","sidebarOpen","setSidebarOpen","windowWidth","setWindowWidth","window","innerWidth","fetchPosts","handleResize","addEventListener","removeEventListener","isMobile","res","get","data","error","console","handleLike","postId","post","userId","uid","handleComment","comment","trim","userName","displayName","text","handleLogout","location","reload","handleTabClick","tab","filteredLikedPosts","filter","likes","includes","filteredCommentedPosts","comments","some","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","map","PostCard","onLike","onComment","_id","length","email","_c","_s2","showCommentInput","setShowCommentInput","title","content","imageUrl","src","alt","color","fill","CommentBox","onSubmit","c","i","_c2","_s3","setComment","handleSubmit","type","placeholder","value","onChange","e","target","onKeyDown","key","_c3","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/UserDashboard.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"../axiosConfig\";\r\n// import {\r\n//   BookOpen,\r\n//   ThumbsUp,\r\n//   MessageCircle,\r\n//   User,\r\n//   LogOut,\r\n//   Menu,\r\n//   Heart\r\n// } from \"lucide-react\";\r\n// import { getAuth, signOut } from \"firebase/auth\";\r\n// import \"./UserDashboard.css\";\r\n\r\n// function UserDashboard({ user }) {\r\n//   const [activeTab, setActiveTab] = useState(\"view-posts\");\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n//   const isMobile = window.innerWidth <= 768;\r\n\r\n//   useEffect(() => {\r\n//     fetchPosts();\r\n//   }, []);\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching posts\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLike = async (postId) => {\r\n//     try {\r\n//       await axios.post(`/api/posts/${postId}/like`, { userId: user.uid });\r\n//       fetchPosts();\r\n//     } catch (error) {\r\n//       console.error(\"Like failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleComment = async (postId, comment) => {\r\n//     if (!comment) return;\r\n//     try {\r\n//       await axios.post(`/api/posts/${postId}/comment`, {\r\n//         userId: user.uid,\r\n//         userName: user.displayName,\r\n//         text: comment\r\n//       });\r\n//       fetchPosts();\r\n//     } catch (error) {\r\n//       console.error(\"Comment failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     const auth = getAuth();\r\n//     try {\r\n//       await signOut(auth);\r\n//       window.location.reload();\r\n//     } catch (error) {\r\n//       console.error(\"Logout failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleTabClick = (tab) => {\r\n//     setActiveTab(tab);\r\n//     if (isMobile) setSidebarOpen(false);\r\n//   };\r\n\r\n//   const filteredLikedPosts = posts.filter(post => post.likes.includes(user.uid));\r\n//   const filteredCommentedPosts = posts.filter(post =>\r\n//     post.comments.some(comment => comment.userId === user.uid)\r\n//   );\r\n\r\n//   return (\r\n//     <div className={`user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n//       <button className=\"hamburger\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n//         <Menu size={24} />\r\n//       </button>\r\n\r\n//       <aside className={`user-sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n//         <h2 className=\"user-greeting\">Hello, {user.displayName}</h2>\r\n//         <ul className=\"user-menu\">\r\n//           <li onClick={() => handleTabClick(\"profile\")}><User size={18} /> <span>Profile</span></li>\r\n//           <li onClick={() => handleTabClick(\"view-posts\")}><BookOpen size={18} /> <span>View Posts</span></li>\r\n//           <li onClick={() => handleTabClick(\"liked-posts\")}><ThumbsUp size={18} /> <span>Liked Posts</span></li>\r\n//           <li onClick={() => handleTabClick(\"commented-posts\")}><MessageCircle size={18} /> <span>Commented Posts</span></li>\r\n//           <li onClick={handleLogout}><LogOut size={18} /> <span>Logout</span></li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       <main className=\"user-content\">\r\n//         {activeTab === \"view-posts\" && (\r\n//           <>\r\n//             <h3>Admin Posts</h3>\r\n//             {posts.map((post) => (\r\n//               <PostCard\r\n//                 key={post._id}\r\n//                 post={post}\r\n//                 user={user}\r\n//                 onLike={handleLike}\r\n//                 onComment={handleComment}\r\n//               />\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"liked-posts\" && (\r\n//           <>\r\n//             <h3>Posts You've Liked</h3>\r\n//             {filteredLikedPosts.length > 0 ? (\r\n//               filteredLikedPosts.map((post) => (\r\n//                 <PostCard\r\n//                   key={post._id}\r\n//                   post={post}\r\n//                   user={user}\r\n//                   onLike={handleLike}\r\n//                   onComment={handleComment}\r\n//                 />\r\n//               ))\r\n//             ) : (\r\n//               <p>No liked posts yet.</p>\r\n//             )}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"commented-posts\" && (\r\n//           <>\r\n//             <h3>Posts You've Commented On</h3>\r\n//             {filteredCommentedPosts.length > 0 ? (\r\n//               filteredCommentedPosts.map((post) => (\r\n//                 <PostCard\r\n//                   key={post._id}\r\n//                   post={post}\r\n//                   user={user}\r\n//                   onLike={handleLike}\r\n//                   onComment={handleComment}\r\n//                 />\r\n//               ))\r\n//             ) : (\r\n//               <p>No commented posts yet.</p>\r\n//             )}\r\n//           </>\r\n//         )}\r\n\r\n//         {activeTab === \"profile\" && (\r\n//           <div>\r\n//             <h3>Profile Info</h3>\r\n//             <p><strong>Name:</strong> {user.displayName}</p>\r\n//             <p><strong>Email:</strong> {user.email}</p>\r\n//           </div>\r\n//         )}\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function PostCard({ post, user, onLike, onComment }) {\r\n//   const [showCommentInput, setShowCommentInput] = useState(false);\r\n\r\n//   return (\r\n//     <div className=\"post-card\">\r\n//       <h4>{post.title}</h4>\r\n//       <p>{post.content}</p>\r\n//       {post.imageUrl && (\r\n//         <img\r\n//           src={`http://localhost:5000${post.imageUrl}`}\r\n//           alt=\"post\"\r\n//           className=\"post-image\"\r\n//         />\r\n//       )}\r\n//       <div className=\"button-group\">\r\n//         <button\r\n//           className={`icon-button ${post.likes.includes(user.uid) ? \"liked\" : \"\"}`}\r\n//           onClick={() => onLike(post._id)}\r\n//           title=\"Like\"\r\n//         >\r\n//           <Heart\r\n//             className=\"icon\"\r\n//             size={24}\r\n//             color={post.likes.includes(user.uid) ? \"red\" : \"black\"}\r\n//             fill={post.likes.includes(user.uid) ? \"red\" : \"none\"}\r\n//           />\r\n//           <span className=\"like-count\">({post.likes.length})</span>\r\n//         </button>\r\n\r\n//         <button className=\"icon-button\" onClick={() => setShowCommentInput(!showCommentInput)} title=\"Comment\">\r\n//           <MessageCircle className=\"icon\" size={24} />\r\n//         </button>\r\n//       </div>\r\n\r\n//       {showCommentInput && (\r\n//         <CommentBox postId={post._id} onSubmit={onComment} />\r\n//       )}\r\n\r\n//       <div className=\"comments\">\r\n//         {post.comments.map((c, i) => (\r\n//           <p key={i}>\r\n//             <strong>{c.userName}</strong>: {c.text}\r\n//           </p>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function CommentBox({ postId, onSubmit }) {\r\n//   const [comment, setComment] = useState(\"\");\r\n\r\n//   return (\r\n//     <div className=\"comment-box\">\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Add a comment\"\r\n//         value={comment}\r\n//         onChange={(e) => setComment(e.target.value)}\r\n//       />\r\n//       <button\r\n//         onClick={() => {\r\n//           onSubmit(postId, comment);\r\n//           setComment(\"\");\r\n//         }}\r\n//       >\r\n//         Send\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserDashboard;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axiosConfig\";\r\nimport {\r\n  BookOpen,\r\n  ThumbsUp,\r\n  MessageCircle,\r\n  User,\r\n  LogOut,\r\n  Menu,\r\n  Heart\r\n} from \"lucide-react\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport \"./UserDashboard.css\";\r\n\r\nfunction UserDashboard({ user }) {\r\n  const [activeTab, setActiveTab] = useState(\"view-posts\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    const handleResize = () => setWindowWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const isMobile = windowWidth <= 768;\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/posts\");\r\n      setPosts(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts\", error);\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      await axios.post(`/api/posts/${postId}/like`, { userId: user.uid });\r\n      fetchPosts();\r\n    } catch (error) {\r\n      console.error(\"Like failed\", error);\r\n    }\r\n  };\r\n\r\n  const handleComment = async (postId, comment) => {\r\n    if (!comment.trim()) return;\r\n    try {\r\n      await axios.post(`/api/posts/${postId}/comment`, {\r\n        userId: user.uid,\r\n        userName: user.displayName,\r\n        text: comment.trim()\r\n      });\r\n      fetchPosts();\r\n    } catch (error) {\r\n      console.error(\"Comment failed\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(getAuth());\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Logout failed\", error);\r\n    }\r\n  };\r\n\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n    if (isMobile) setSidebarOpen(false);\r\n  };\r\n\r\n  const filteredLikedPosts = posts.filter(post =>\r\n    post.likes.includes(user.uid)\r\n  );\r\n  const filteredCommentedPosts = posts.filter(post =>\r\n    post.comments.some(comment => comment.userId === user.uid)\r\n  );\r\n\r\n  return (\r\n    <div className={`user-dashboard ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\r\n      {isMobile && (\r\n        <button className=\"hamburger\" onClick={() => setSidebarOpen(!sidebarOpen)}>\r\n          <Menu size={24} />\r\n        </button>\r\n      )}\r\n\r\n      <aside className={`user-sidebar ${sidebarOpen ? \"open\" : \"\"}`}>\r\n        <h2 className=\"user-greeting\">Hello, {user.displayName}</h2>\r\n        <ul className=\"user-menu\">\r\n          <li onClick={() => handleTabClick(\"profile\")}><User size={18} /><span>Profile</span></li>\r\n          <li onClick={() => handleTabClick(\"view-posts\")}><BookOpen size={18} /><span>View Posts</span></li>\r\n          <li onClick={() => handleTabClick(\"liked-posts\")}><ThumbsUp size={18} /><span>Liked Posts</span></li>\r\n          <li onClick={() => handleTabClick(\"commented-posts\")}><MessageCircle size={18} /><span>Commented Posts</span></li>\r\n          <li onClick={handleLogout}><LogOut size={18} /><span>Logout</span></li>\r\n        </ul>\r\n      </aside>\r\n\r\n      <main className=\"user-content\">\r\n        {activeTab === \"view-posts\" && (\r\n          <>\r\n            <h3>Admin Posts</h3>\r\n            {posts.map(post => (\r\n              <PostCard\r\n                key={post._id}\r\n                post={post}\r\n                user={user}\r\n                onLike={handleLike}\r\n                onComment={handleComment}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {activeTab === \"liked-posts\" && (\r\n          <>\r\n            <h3>Posts You've Liked</h3>\r\n            {filteredLikedPosts.length > 0 ? (\r\n              filteredLikedPosts.map(post => (\r\n                <PostCard\r\n                  key={post._id}\r\n                  post={post}\r\n                  user={user}\r\n                  onLike={handleLike}\r\n                  onComment={handleComment}\r\n                />\r\n              ))\r\n            ) : (\r\n              <p>No liked posts yet.</p>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {activeTab === \"commented-posts\" && (\r\n          <>\r\n            <h3>Posts You've Commented On</h3>\r\n            {filteredCommentedPosts.length > 0 ? (\r\n              filteredCommentedPosts.map(post => (\r\n                <PostCard\r\n                  key={post._id}\r\n                  post={post}\r\n                  user={user}\r\n                  onLike={handleLike}\r\n                  onComment={handleComment}\r\n                />\r\n              ))\r\n            ) : (\r\n              <p>No commented posts yet.</p>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {activeTab === \"profile\" && (\r\n          <div>\r\n            <h3>Profile Info</h3>\r\n            <p><strong>Name:</strong> {user.displayName}</p>\r\n            <p><strong>Email:</strong> {user.email}</p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PostCard({ post, user, onLike, onComment }) {\r\n  const [showCommentInput, setShowCommentInput] = useState(false);\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      <h4>{post.title}</h4>\r\n      <p>{post.content}</p>\r\n      {post.imageUrl && (\r\n        <img\r\n          src={`http://localhost:5000${post.imageUrl}`}\r\n          alt=\"Post\"\r\n          className=\"post-image\"\r\n        />\r\n      )}\r\n      <div className=\"button-group\">\r\n        <button\r\n          className={`icon-button ${post.likes.includes(user.uid) ? \"liked\" : \"\"}`}\r\n          onClick={() => onLike(post._id)}\r\n          title=\"Like\"\r\n        >\r\n          <Heart\r\n            className=\"icon\"\r\n            size={24}\r\n            color={post.likes.includes(user.uid) ? \"red\" : \"black\"}\r\n            fill={post.likes.includes(user.uid) ? \"red\" : \"none\"}\r\n          />\r\n          <span className=\"like-count\">({post.likes.length})</span>\r\n        </button>\r\n\r\n        <button\r\n          className=\"icon-button\"\r\n          onClick={() => setShowCommentInput(!showCommentInput)}\r\n          title=\"Comment\"\r\n        >\r\n          <MessageCircle className=\"icon\" size={24} />\r\n        </button>\r\n      </div>\r\n\r\n      {showCommentInput && (\r\n        <CommentBox postId={post._id} onSubmit={onComment} />\r\n      )}\r\n\r\n      <div className=\"comments\">\r\n        {post.comments.map((c, i) => (\r\n          <p key={i}><strong>{c.userName}</strong>: {c.text}</p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CommentBox({ postId, onSubmit }) {\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    if (!comment.trim()) return;\r\n    onSubmit(postId, comment);\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-box\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a comment\"\r\n        value={comment}\r\n        onChange={(e) => setComment(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && handleSubmit()}\r\n      />\r\n      <button onClick={handleSubmit}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SACEC,QAAQ,EACRC,QAAQ,EACRC,aAAa,EACbC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}