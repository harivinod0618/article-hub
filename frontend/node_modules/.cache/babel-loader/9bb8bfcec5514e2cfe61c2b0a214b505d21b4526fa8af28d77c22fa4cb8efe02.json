{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from \"./ViewPosts\";\n// import axios from \"axios\";\n// import ViewComments from \"./ViewComments\";\n\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   LogOut,\n// } from \"lucide-react\";\n\n// import { auth } from \"../firebase\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     auth.signOut()\n//       .then(() => {\n//         console.log(\"User signed out\");\n//         navigate(\"/signin\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\" || selectedOption === \"comments\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//         return <ViewPosts posts={posts} />;\n\n//       case \"comments\":\n//         return <ViewComments posts={posts} />;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul className=\"menu-list\">\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//           <li onClick={handleLogout}>\n//             <LogOut className=\"icon\" /> Logout\n//           </li>\n//         </ul>\n//       </aside>\n\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import ViewPosts from \"./ViewPosts\";\n// import ViewComments from \"./ViewComments\";\n// import axios from \"axios\";\n\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   LogOut,\n// } from \"lucide-react\";\n\n// import { auth } from \"../firebase\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [isCollapsed, setIsCollapsed] = useState(window.innerWidth < 700);\n\n//   const navigate = useNavigate();\n\n//   // Handle sidebar collapse on resize\n//   useEffect(() => {\n//     const handleResize = () => {\n//       setIsCollapsed(window.innerWidth < 700);\n//     };\n//     window.addEventListener(\"resize\", handleResize);\n//     return () => window.removeEventListener(\"resize\", handleResize);\n//   }, []);\n\n//   const handleLogout = () => {\n//     auth.signOut()\n//       .then(() => {\n//         console.log(\"User signed out\");\n//         navigate(\"/signin\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\" || selectedOption === \"comments\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//         return <ViewPosts posts={posts} />;\n\n//       case \"comments\":\n//         return <ViewComments posts={posts} />;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className={`sidebar ${isCollapsed ? \"collapsed\" : \"\"}`}>\n//         {!isCollapsed && <h1>Admin Panel</h1>}\n//         <ul className=\"menu-list\">\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> {!isCollapsed && \"Upload Post\"}\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> {!isCollapsed && \"View My Posts\"}\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> {!isCollapsed && \"View Comments\"}\n//           </li>\n//           <li onClick={handleLogout}>\n//             <LogOut className=\"icon\" /> {!isCollapsed && \"Logout\"}\n//           </li>\n//         </ul>\n//       </aside>\n\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./AdminDashboard.css\";\nimport ViewPosts from \"./ViewPosts\";\nimport ViewComments from \"./ViewComments\";\nimport axios from \"axios\";\nimport { FilePlus, MessageSquareText, LayoutList, LogOut } from \"lucide-react\";\nimport { auth } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"upload\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [isCollapsed, setIsCollapsed] = useState(window.innerWidth < 700);\n  const navigate = useNavigate();\n\n  // Handle sidebar collapse on resize\n  useEffect(() => {\n    const handleResize = () => {\n      setIsCollapsed(window.innerWidth < 700);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const handleLogout = () => {\n    auth.signOut().then(() => {\n      console.log(\"User signed out\");\n      navigate(\"/signin\");\n    }).catch(error => {\n      console.error(\"Logout error:\", error);\n    });\n  };\n  const fetchPosts = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/posts\");\n      setPosts(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch posts:\", err);\n    }\n  };\n  useEffect(() => {\n    if (selectedOption === \"view\" || selectedOption === \"comments\") {\n      fetchPosts();\n    }\n  }, [selectedOption]);\n  const handleUpload = async () => {\n    if (!title || !content || !imageFile) {\n      alert(\"All fields are required.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"content\", content);\n      formData.append(\"image\", imageFile);\n      await axios.post(\"http://localhost:5000/api/posts\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"✅ Post uploaded successfully!\");\n      setTitle(\"\");\n      setContent(\"\");\n      setImageFile(null);\n      fetchPosts();\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"❌ Failed to upload post\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderContent = () => {\n    switch (selectedOption) {\n      case \"upload\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload a New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleUpload();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Post Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Post Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: content,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setImageFile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), imageFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Selected Image Preview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(imageFile),\n                alt: \"preview\",\n                style: {\n                  maxWidth: \"200px\",\n                  marginTop: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading,\n              children: loading ? \"Uploading...\" : \"Submit Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this);\n      case \"view\":\n        return /*#__PURE__*/_jsxDEV(ViewPosts, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 16\n        }, this);\n      case \"comments\":\n        return /*#__PURE__*/_jsxDEV(ViewComments, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar ${isCollapsed ? \"collapsed\" : \"\"}`,\n      children: [!isCollapsed && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"upload\"),\n          children: [/*#__PURE__*/_jsxDEV(FilePlus, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), \" \", !isCollapsed && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"view\"),\n          children: [/*#__PURE__*/_jsxDEV(LayoutList, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), \" \", !isCollapsed && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"View My Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedOption(\"comments\"),\n          children: [/*#__PURE__*/_jsxDEV(MessageSquareText, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), \" \", !isCollapsed && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"View Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(LogOut, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), \" \", !isCollapsed && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"OBUIBc2iPzDApAFLIV2w5/pxFPQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ViewPosts","ViewComments","axios","FilePlus","MessageSquareText","LayoutList","LogOut","auth","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","selectedOption","setSelectedOption","title","setTitle","content","setContent","imageFile","setImageFile","loading","setLoading","posts","setPosts","isCollapsed","setIsCollapsed","window","innerWidth","navigate","handleResize","addEventListener","removeEventListener","handleLogout","signOut","then","console","log","catch","error","fetchPosts","res","get","data","err","handleUpload","alert","formData","FormData","append","post","headers","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","value","onChange","target","accept","files","style","marginTop","src","URL","createObjectURL","alt","maxWidth","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/AdminDashboard.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from \"./ViewPosts\";\r\n// import axios from \"axios\";\r\n// import ViewComments from \"./ViewComments\";\r\n\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   LogOut,\r\n// } from \"lucide-react\";\r\n\r\n// import { auth } from \"../firebase\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogout = () => {\r\n//     auth.signOut()\r\n//       .then(() => {\r\n//         console.log(\"User signed out\");\r\n//         navigate(\"/signin\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Logout error:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\" || selectedOption === \"comments\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n//       case \"view\":\r\n//         return <ViewPosts posts={posts} />;\r\n\r\n//       case \"comments\":\r\n//         return <ViewComments posts={posts} />;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul className=\"menu-list\">\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//           <li onClick={handleLogout}>\r\n//             <LogOut className=\"icon\" /> Logout\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import ViewPosts from \"./ViewPosts\";\r\n// import ViewComments from \"./ViewComments\";\r\n// import axios from \"axios\";\r\n\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   LogOut,\r\n// } from \"lucide-react\";\r\n\r\n// import { auth } from \"../firebase\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [isCollapsed, setIsCollapsed] = useState(window.innerWidth < 700);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   // Handle sidebar collapse on resize\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       setIsCollapsed(window.innerWidth < 700);\r\n//     };\r\n//     window.addEventListener(\"resize\", handleResize);\r\n//     return () => window.removeEventListener(\"resize\", handleResize);\r\n//   }, []);\r\n\r\n//   const handleLogout = () => {\r\n//     auth.signOut()\r\n//       .then(() => {\r\n//         console.log(\"User signed out\");\r\n//         navigate(\"/signin\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Logout error:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\" || selectedOption === \"comments\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n//       case \"view\":\r\n//         return <ViewPosts posts={posts} />;\r\n\r\n//       case \"comments\":\r\n//         return <ViewComments posts={posts} />;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className={`sidebar ${isCollapsed ? \"collapsed\" : \"\"}`}>\r\n//         {!isCollapsed && <h1>Admin Panel</h1>}\r\n//         <ul className=\"menu-list\">\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> {!isCollapsed && \"Upload Post\"}\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> {!isCollapsed && \"View My Posts\"}\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> {!isCollapsed && \"View Comments\"}\r\n//           </li>\r\n//           <li onClick={handleLogout}>\r\n//             <LogOut className=\"icon\" /> {!isCollapsed && \"Logout\"}\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./AdminDashboard.css\";\r\nimport ViewPosts from \"./ViewPosts\";\r\nimport ViewComments from \"./ViewComments\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  FilePlus,\r\n  MessageSquareText,\r\n  LayoutList,\r\n  LogOut,\r\n} from \"lucide-react\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AdminDashboard() {\r\n  const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [isCollapsed, setIsCollapsed] = useState(window.innerWidth < 700);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Handle sidebar collapse on resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsCollapsed(window.innerWidth < 700);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut()\r\n      .then(() => {\r\n        console.log(\"User signed out\");\r\n        navigate(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Logout error:\", error);\r\n      });\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch posts:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedOption === \"view\" || selectedOption === \"comments\") {\r\n      fetchPosts();\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const handleUpload = async () => {\r\n    if (!title || !content || !imageFile) {\r\n      alert(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", title);\r\n      formData.append(\"content\", content);\r\n      formData.append(\"image\", imageFile);\r\n\r\n      await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"✅ Post uploaded successfully!\");\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n      setImageFile(null);\r\n      fetchPosts();\r\n    } catch (err) {\r\n      console.error(\"Upload failed:\", err);\r\n      alert(\"❌ Failed to upload post\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (selectedOption) {\r\n      case \"upload\":\r\n        return (\r\n          <div className=\"upload-section\">\r\n            <h2>Upload a New Post</h2>\r\n            <form onSubmit={(e) => { e.preventDefault(); handleUpload(); }}>\r\n              <label>Post Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <label>Post Content</label>\r\n              <textarea\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              ></textarea>\r\n              <label>Upload Image</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => setImageFile(e.target.files[0])}\r\n              />\r\n              {imageFile && (\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <p>Selected Image Preview:</p>\r\n                  <img\r\n                    src={URL.createObjectURL(imageFile)}\r\n                    alt=\"preview\"\r\n                    style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? \"Uploading...\" : \"Submit Post\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        );\r\n\r\n      case \"view\":\r\n        return <ViewPosts posts={posts} />;\r\n\r\n      case \"comments\":\r\n        return <ViewComments posts={posts} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <aside className={`sidebar ${isCollapsed ? \"collapsed\" : \"\"}`}>\r\n        {!isCollapsed && <h1>Admin Panel</h1>}\r\n        <ul>\r\n          <li onClick={() => setSelectedOption(\"upload\")}>\r\n            <FilePlus className=\"icon\" /> {!isCollapsed && <span>Upload Post</span>}\r\n          </li>\r\n          <li onClick={() => setSelectedOption(\"view\")}>\r\n            <LayoutList className=\"icon\" /> {!isCollapsed && <span>View My Posts</span>}\r\n          </li>\r\n          <li onClick={() => setSelectedOption(\"comments\")}>\r\n            <MessageSquareText className=\"icon\" /> {!isCollapsed && <span>View Comments</span>}\r\n          </li>\r\n          <li className=\"logout-btn\" onClick={handleLogout}>\r\n            <LogOut className=\"icon\" /> {!isCollapsed && <span>Logout</span>}\r\n          </li>\r\n        </ul>\r\n      </aside>\r\n\r\n      <main className=\"content\">{renderContent()}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}