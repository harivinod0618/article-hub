{"ast":null,"code":"\n// // import React, { useState, useEffect } from \"react\";\n// // import \"./AdminDashboard.css\";\n// // import axios from \"axios\";\n// // import { FilePlus, MessageSquareText, LayoutList } from \"lucide-react\";\n\n// // function AdminDashboard() {\n// //   const [selectedOption, setSelectedOption] = useState(\"upload\");\n// //   const [title, setTitle] = useState(\"\");\n// //   const [content, setContent] = useState(\"\");\n// //   const [imageFile, setImageFile] = useState(null);\n// //   const [loading, setLoading] = useState(false);\n// //   const [posts, setPosts] = useState([]);\n\n// //   const handleUpload = async () => {\n// //     if (!title || !content || !imageFile) {\n// //       alert(\"All fields are required.\");\n// //       return;\n// //     }\n\n// //     setLoading(true);\n// //     try {\n// //       const formData = new FormData();\n// //       formData.append(\"title\", title);\n// //       formData.append(\"content\", content);\n// //       formData.append(\"image\", imageFile);\n\n// //       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\n// //       });\n\n// //       alert(\"✅ Post uploaded successfully!\");\n// //       setTitle(\"\");\n// //       setContent(\"\");\n// //       setImageFile(null);\n// //       fetchPosts(); // Refresh the posts\n// //     } catch (err) {\n// //       console.error(\"Upload failed:\", err);\n// //       alert(\"❌ Failed to upload post\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const fetchPosts = async () => {\n// //     try {\n// //       const res = await axios.get(\"http://localhost:5000/api/posts\");\n// //       setPosts(res.data);\n// //     } catch (err) {\n// //       console.error(\"Failed to fetch posts:\", err);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     if (selectedOption === \"view\") {\n// //       fetchPosts();\n// //     }\n// //   }, [selectedOption]);\n\n// //   const renderContent = () => {\n// //     switch (selectedOption) {\n// //       case \"upload\":\n// //         return (\n// //           <div className=\"upload-form\">\n// //             <h2>Upload a New Post</h2>\n// //             <input\n// //               type=\"text\"\n// //               placeholder=\"Post Title\"\n// //               className=\"input-field small-width\"\n// //               value={title}\n// //               onChange={(e) => setTitle(e.target.value)}\n// //             />\n// //             <br />\n// //             <textarea\n// //               placeholder=\"Post Content\"\n// //               className=\"input-field small-width\"\n// //               value={content}\n// //               onChange={(e) => setContent(e.target.value)}\n// //             ></textarea>\n// //             <br />\n// //             <input\n// //               type=\"file\"\n// //               accept=\"image/*\"\n// //               className=\"input-field small-width\"\n// //               onChange={(e) => setImageFile(e.target.files[0])}\n// //             />\n// //             <br />\n// //             {imageFile && (\n// //               <div>\n// //                 <p>Selected Image Preview:</p>\n// //                 <img\n// //                   src={URL.createObjectURL(imageFile)}\n// //                   alt=\"preview\"\n// //                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n// //                 />\n// //               </div>\n// //             )}\n// //             <br />\n// //             <button\n// //               className=\"submit-btn\"\n// //               onClick={handleUpload}\n// //               disabled={loading || !title || !content || !imageFile}\n// //             >\n// //               {loading ? \"Uploading...\" : \"Submit Post\"}\n// //             </button>\n// //           </div>\n// //         );\n\n// //       case \"view\":\n// //         return (\n// //           <div className=\"view-posts\">\n// //             <h2>My Uploaded Posts</h2>\n// //             {posts.length === 0 ? (\n// //               <p>No posts uploaded yet.</p>\n// //             ) : (\n// //               posts.map((post) => (\n// //                 <div key={post._id} className=\"post-card\">\n// //                   <h3>{post.title}</h3>\n// //                   <p>{post.content}</p>\n// //                   {post.imageUrl && (\n// //                     <img\n// //                       src={`http://localhost:5000${post.imageUrl}`}\n// //                       alt={post.title}\n// //                       style={{ maxWidth: \"300px\" }}\n// //                     />\n// //                   )}\n// //                 </div>\n// //               ))\n// //             )}\n// //           </div>\n// //         );\n\n// //       case \"comments\":\n// //         return <h2>View Comments on Your Posts</h2>;\n\n// //       default:\n// //         return null;\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"admin-dashboard\">\n// //       <aside className=\"sidebar\">\n// //         <h1>Admin Panel</h1>\n// //         <ul>\n// //           <li onClick={() => setSelectedOption(\"upload\")}>\n// //             <FilePlus className=\"icon\" /> Upload Post\n// //           </li>\n// //           <li onClick={() => setSelectedOption(\"view\")}>\n// //             <LayoutList className=\"icon\" /> View My Posts\n// //           </li>\n// //           <li onClick={() => setSelectedOption(\"comments\")}>\n// //             <MessageSquareText className=\"icon\" /> View Comments\n// //           </li>\n// //         </ul>\n// //       </aside>\n// //       <main className=\"content\">{renderContent()}</main>\n// //     </div>\n// //   );\n// // }\n\n// // export default AdminDashboard;\n\n// import ViewPosts from './ViewPosts';\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./AdminDashboard.css\";\n// import axios from \"axios\";\n// import {\n//   FilePlus,\n//   MessageSquareText,\n//   LayoutList,\n//   Trash,\n//   Pencil,\n//   X,\n//   Save,\n// } from \"lucide-react\";\n\n// function AdminDashboard() {\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editedTitle, setEditedTitle] = useState(\"\");\n//   const [editedContent, setEditedContent] = useState(\"\");\n\n//   const fetchPosts = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\n//       setPosts(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch posts:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (selectedOption === \"view\") {\n//       fetchPosts();\n//     }\n//   }, [selectedOption]);\n\n//   const handleUpload = async () => {\n//     if (!title || !content || !imageFile) {\n//       alert(\"All fields are required.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       formData.append(\"image\", imageFile);\n\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"✅ Post uploaded successfully!\");\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setImageFile(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       alert(\"❌ Failed to upload post\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDelete = async (postId) => {\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\n//     try {\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\n//       setPosts(posts.filter((post) => post._id !== postId));\n//     } catch (err) {\n//       console.error(\"Failed to delete post:\", err);\n//       alert(\"❌ Failed to delete post\");\n//     }\n//   };\n\n//   const startEditing = (post) => {\n//     setEditingPostId(post._id);\n//     setEditedTitle(post.title);\n//     setEditedContent(post.content);\n//   };\n\n//   const cancelEditing = () => {\n//     setEditingPostId(null);\n//     setEditedTitle(\"\");\n//     setEditedContent(\"\");\n//   };\n\n//   const saveEdit = async (postId) => {\n//     try {\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\n//         title: editedTitle,\n//         content: editedContent,\n//       });\n//       setEditingPostId(null);\n//       fetchPosts();\n//     } catch (err) {\n//       console.error(\"Failed to update post:\", err);\n//       alert(\"❌ Failed to update post\");\n//     }\n//   };\n\n//   const renderContent = () => {\n//     switch (selectedOption) {\n//       case \"upload\":\n//         return (\n//           <div className=\"upload-form\">\n//             <h2>Upload a New Post</h2>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Post Title\"\n//               className=\"input-field small-width\"\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//             />\n//             <br />\n//             <textarea\n//               placeholder=\"Post Content\"\n//               className=\"input-field small-width\"\n//               value={content}\n//               onChange={(e) => setContent(e.target.value)}\n//             ></textarea>\n//             <br />\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               className=\"input-field small-width\"\n//               onChange={(e) => setImageFile(e.target.files[0])}\n//             />\n//             <br />\n//             {imageFile && (\n//               <div>\n//                 <p>Selected Image Preview:</p>\n//                 <img\n//                   src={URL.createObjectURL(imageFile)}\n//                   alt=\"preview\"\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\n//                 />\n//               </div>\n//             )}\n//             <br />\n//             <button\n//               className=\"submit-btn\"\n//               onClick={handleUpload}\n//               disabled={loading}\n//             >\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\n//             </button>\n//           </div>\n//         );\n\n//       case \"view\":\n//         return (\n//           <div className=\"view-posts\">\n//             <h2>My Uploaded Posts</h2>\n//             {posts.length === 0 ? (\n//               <p>No posts uploaded yet.</p>\n//             ) : (\n//               posts.map((post) => (\n//                 <div key={post._id} className=\"post-card\">\n//                   {editingPostId === post._id ? (\n//                     <>\n//                       <input\n//                         type=\"text\"\n//                         value={editedTitle}\n//                         onChange={(e) => setEditedTitle(e.target.value)}\n//                         className=\"input-field\"\n//                       />\n//                       <textarea\n//                         value={editedContent}\n//                         onChange={(e) => setEditedContent(e.target.value)}\n//                         className=\"input-field\"\n//                       ></textarea>\n//                       <div style={{ marginTop: \"10px\" }}>\n//                         <div className=\"button-group\">\n//                           <button className=\"btn save-btn\" onClick={() => saveEdit(post._id)}>\n//                             <Save size={16} /> Save\n//                           </button>\n//                           <button className=\"btn cancel-btn\" onClick={cancelEditing}>\n//                           <X size={16} /> Cancel\n//                           </button>\n//                         </div>\n\n//                       <div className=\"button-group\">\n//   <button className=\"btn edit-btn\" onClick={() => startEditing(post)}>\n//     <Pencil size={16} /> Edit\n//   </button>\n//   <button className=\"btn delete-btn\" onClick={() => handleDelete(post._id)}>\n//     <Trash size={16} /> Delete\n//   </button>\n// </div>\n\n//                       </div>\n//                     </>\n//                   ) : (\n//                     <>\n//                       <h3>{post.title}</h3>\n//                       <p>{post.content}</p>\n//                       {post.imageUrl && (\n//                         <img\n//                           src={`http://localhost:5000${post.imageUrl}`}\n//                           alt={post.title}\n//                           style={{ maxWidth: \"300px\" }}\n//                         />\n//                       )}\n//                       <div style={{ marginTop: \"10px\" }}>\n//                         <button onClick={() => startEditing(post)}>\n//                           <Pencil size={16} /> Edit\n//                         </button>\n//                         <button\n//                           onClick={() => handleDelete(post._id)}\n//                           style={{ marginLeft: 8 }}\n//                         >\n//                           <Trash size={16} /> Delete\n//                         </button>\n//                       </div>\n//                     </>\n//                   )}\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         );\n\n//       case \"comments\":\n//         return <h2>View Comments on Your Posts</h2>;\n\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-dashboard\">\n//       <aside className=\"sidebar\">\n//         <h1>Admin Panel</h1>\n//         <ul>\n//           <li onClick={() => setSelectedOption(\"upload\")}>\n//             <FilePlus className=\"icon\" /> Upload Post\n//           </li>\n//           <li onClick={() => setSelectedOption(\"view\")}>\n//             <LayoutList className=\"icon\" /> View My Posts\n//           </li>\n//           <li onClick={() => setSelectedOption(\"comments\")}>\n//             <MessageSquareText className=\"icon\" /> View Comments\n//           </li>\n//         </ul>\n//       </aside>\n//       <main className=\"content\">{renderContent()}</main>\n//     </div>\n\n// //newww\n\n//   );\n// }\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/components/AdminDashboard.js"],"sourcesContent":["\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import \"./AdminDashboard.css\";\r\n// // import axios from \"axios\";\r\n// // import { FilePlus, MessageSquareText, LayoutList } from \"lucide-react\";\r\n\r\n// // function AdminDashboard() {\r\n// //   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n// //   const [title, setTitle] = useState(\"\");\r\n// //   const [content, setContent] = useState(\"\");\r\n// //   const [imageFile, setImageFile] = useState(null);\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [posts, setPosts] = useState([]);\r\n\r\n// //   const handleUpload = async () => {\r\n// //     if (!title || !content || !imageFile) {\r\n// //       alert(\"All fields are required.\");\r\n// //       return;\r\n// //     }\r\n\r\n// //     setLoading(true);\r\n// //     try {\r\n// //       const formData = new FormData();\r\n// //       formData.append(\"title\", title);\r\n// //       formData.append(\"content\", content);\r\n// //       formData.append(\"image\", imageFile);\r\n\r\n// //       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// //       });\r\n\r\n// //       alert(\"✅ Post uploaded successfully!\");\r\n// //       setTitle(\"\");\r\n// //       setContent(\"\");\r\n// //       setImageFile(null);\r\n// //       fetchPosts(); // Refresh the posts\r\n// //     } catch (err) {\r\n// //       console.error(\"Upload failed:\", err);\r\n// //       alert(\"❌ Failed to upload post\");\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   const fetchPosts = async () => {\r\n// //     try {\r\n// //       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n// //       setPosts(res.data);\r\n// //     } catch (err) {\r\n// //       console.error(\"Failed to fetch posts:\", err);\r\n// //     }\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     if (selectedOption === \"view\") {\r\n// //       fetchPosts();\r\n// //     }\r\n// //   }, [selectedOption]);\r\n\r\n// //   const renderContent = () => {\r\n// //     switch (selectedOption) {\r\n// //       case \"upload\":\r\n// //         return (\r\n// //           <div className=\"upload-form\">\r\n// //             <h2>Upload a New Post</h2>\r\n// //             <input\r\n// //               type=\"text\"\r\n// //               placeholder=\"Post Title\"\r\n// //               className=\"input-field small-width\"\r\n// //               value={title}\r\n// //               onChange={(e) => setTitle(e.target.value)}\r\n// //             />\r\n// //             <br />\r\n// //             <textarea\r\n// //               placeholder=\"Post Content\"\r\n// //               className=\"input-field small-width\"\r\n// //               value={content}\r\n// //               onChange={(e) => setContent(e.target.value)}\r\n// //             ></textarea>\r\n// //             <br />\r\n// //             <input\r\n// //               type=\"file\"\r\n// //               accept=\"image/*\"\r\n// //               className=\"input-field small-width\"\r\n// //               onChange={(e) => setImageFile(e.target.files[0])}\r\n// //             />\r\n// //             <br />\r\n// //             {imageFile && (\r\n// //               <div>\r\n// //                 <p>Selected Image Preview:</p>\r\n// //                 <img\r\n// //                   src={URL.createObjectURL(imageFile)}\r\n// //                   alt=\"preview\"\r\n// //                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n// //                 />\r\n// //               </div>\r\n// //             )}\r\n// //             <br />\r\n// //             <button\r\n// //               className=\"submit-btn\"\r\n// //               onClick={handleUpload}\r\n// //               disabled={loading || !title || !content || !imageFile}\r\n// //             >\r\n// //               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n// //             </button>\r\n// //           </div>\r\n// //         );\r\n\r\n// //       case \"view\":\r\n// //         return (\r\n// //           <div className=\"view-posts\">\r\n// //             <h2>My Uploaded Posts</h2>\r\n// //             {posts.length === 0 ? (\r\n// //               <p>No posts uploaded yet.</p>\r\n// //             ) : (\r\n// //               posts.map((post) => (\r\n// //                 <div key={post._id} className=\"post-card\">\r\n// //                   <h3>{post.title}</h3>\r\n// //                   <p>{post.content}</p>\r\n// //                   {post.imageUrl && (\r\n// //                     <img\r\n// //                       src={`http://localhost:5000${post.imageUrl}`}\r\n// //                       alt={post.title}\r\n// //                       style={{ maxWidth: \"300px\" }}\r\n// //                     />\r\n// //                   )}\r\n// //                 </div>\r\n// //               ))\r\n// //             )}\r\n// //           </div>\r\n// //         );\r\n\r\n// //       case \"comments\":\r\n// //         return <h2>View Comments on Your Posts</h2>;\r\n\r\n// //       default:\r\n// //         return null;\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"admin-dashboard\">\r\n// //       <aside className=\"sidebar\">\r\n// //         <h1>Admin Panel</h1>\r\n// //         <ul>\r\n// //           <li onClick={() => setSelectedOption(\"upload\")}>\r\n// //             <FilePlus className=\"icon\" /> Upload Post\r\n// //           </li>\r\n// //           <li onClick={() => setSelectedOption(\"view\")}>\r\n// //             <LayoutList className=\"icon\" /> View My Posts\r\n// //           </li>\r\n// //           <li onClick={() => setSelectedOption(\"comments\")}>\r\n// //             <MessageSquareText className=\"icon\" /> View Comments\r\n// //           </li>\r\n// //         </ul>\r\n// //       </aside>\r\n// //       <main className=\"content\">{renderContent()}</main>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default AdminDashboard;\r\n\r\n// import ViewPosts from './ViewPosts';\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./AdminDashboard.css\";\r\n// import axios from \"axios\";\r\n// import {\r\n//   FilePlus,\r\n//   MessageSquareText,\r\n//   LayoutList,\r\n//   Trash,\r\n//   Pencil,\r\n//   X,\r\n//   Save,\r\n// } from \"lucide-react\";\r\n\r\n// function AdminDashboard() {\r\n//   const [selectedOption, setSelectedOption] = useState(\"upload\");\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [editingPostId, setEditingPostId] = useState(null);\r\n//   const [editedTitle, setEditedTitle] = useState(\"\");\r\n//   const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:5000/api/posts\");\r\n//       setPosts(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch posts:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedOption === \"view\") {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [selectedOption]);\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!title || !content || !imageFile) {\r\n//       alert(\"All fields are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"title\", title);\r\n//       formData.append(\"content\", content);\r\n//       formData.append(\"image\", imageFile);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/posts\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"✅ Post uploaded successfully!\");\r\n//       setTitle(\"\");\r\n//       setContent(\"\");\r\n//       setImageFile(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       alert(\"❌ Failed to upload post\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (postId) => {\r\n//     if (!window.confirm(\"Are you sure you want to delete this post?\")) return;\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/api/posts/${postId}`);\r\n//       setPosts(posts.filter((post) => post._id !== postId));\r\n//     } catch (err) {\r\n//       console.error(\"Failed to delete post:\", err);\r\n//       alert(\"❌ Failed to delete post\");\r\n//     }\r\n//   };\r\n\r\n//   const startEditing = (post) => {\r\n//     setEditingPostId(post._id);\r\n//     setEditedTitle(post.title);\r\n//     setEditedContent(post.content);\r\n//   };\r\n\r\n//   const cancelEditing = () => {\r\n//     setEditingPostId(null);\r\n//     setEditedTitle(\"\");\r\n//     setEditedContent(\"\");\r\n//   };\r\n\r\n//   const saveEdit = async (postId) => {\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/posts/${postId}`, {\r\n//         title: editedTitle,\r\n//         content: editedContent,\r\n//       });\r\n//       setEditingPostId(null);\r\n//       fetchPosts();\r\n//     } catch (err) {\r\n//       console.error(\"Failed to update post:\", err);\r\n//       alert(\"❌ Failed to update post\");\r\n//     }\r\n//   };\r\n\r\n//   const renderContent = () => {\r\n//     switch (selectedOption) {\r\n//       case \"upload\":\r\n//         return (\r\n//           <div className=\"upload-form\">\r\n//             <h2>Upload a New Post</h2>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Post Title\"\r\n//               className=\"input-field small-width\"\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//             />\r\n//             <br />\r\n//             <textarea\r\n//               placeholder=\"Post Content\"\r\n//               className=\"input-field small-width\"\r\n//               value={content}\r\n//               onChange={(e) => setContent(e.target.value)}\r\n//             ></textarea>\r\n//             <br />\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               className=\"input-field small-width\"\r\n//               onChange={(e) => setImageFile(e.target.files[0])}\r\n//             />\r\n//             <br />\r\n//             {imageFile && (\r\n//               <div>\r\n//                 <p>Selected Image Preview:</p>\r\n//                 <img\r\n//                   src={URL.createObjectURL(imageFile)}\r\n//                   alt=\"preview\"\r\n//                   style={{ maxWidth: \"200px\", marginTop: \"10px\" }}\r\n//                 />\r\n//               </div>\r\n//             )}\r\n//             <br />\r\n//             <button\r\n//               className=\"submit-btn\"\r\n//               onClick={handleUpload}\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Uploading...\" : \"Submit Post\"}\r\n//             </button>\r\n//           </div>\r\n//         );\r\n\r\n//       case \"view\":\r\n//         return (\r\n//           <div className=\"view-posts\">\r\n//             <h2>My Uploaded Posts</h2>\r\n//             {posts.length === 0 ? (\r\n//               <p>No posts uploaded yet.</p>\r\n//             ) : (\r\n//               posts.map((post) => (\r\n//                 <div key={post._id} className=\"post-card\">\r\n//                   {editingPostId === post._id ? (\r\n//                     <>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         value={editedTitle}\r\n//                         onChange={(e) => setEditedTitle(e.target.value)}\r\n//                         className=\"input-field\"\r\n//                       />\r\n//                       <textarea\r\n//                         value={editedContent}\r\n//                         onChange={(e) => setEditedContent(e.target.value)}\r\n//                         className=\"input-field\"\r\n//                       ></textarea>\r\n//                       <div style={{ marginTop: \"10px\" }}>\r\n//                         <div className=\"button-group\">\r\n//                           <button className=\"btn save-btn\" onClick={() => saveEdit(post._id)}>\r\n//                             <Save size={16} /> Save\r\n//                           </button>\r\n//                           <button className=\"btn cancel-btn\" onClick={cancelEditing}>\r\n//                           <X size={16} /> Cancel\r\n//                           </button>\r\n//                         </div>\r\n\r\n//                       <div className=\"button-group\">\r\n//   <button className=\"btn edit-btn\" onClick={() => startEditing(post)}>\r\n//     <Pencil size={16} /> Edit\r\n//   </button>\r\n//   <button className=\"btn delete-btn\" onClick={() => handleDelete(post._id)}>\r\n//     <Trash size={16} /> Delete\r\n//   </button>\r\n// </div>\r\n\r\n\r\n\r\n//                       </div>\r\n//                     </>\r\n//                   ) : (\r\n//                     <>\r\n//                       <h3>{post.title}</h3>\r\n//                       <p>{post.content}</p>\r\n//                       {post.imageUrl && (\r\n//                         <img\r\n//                           src={`http://localhost:5000${post.imageUrl}`}\r\n//                           alt={post.title}\r\n//                           style={{ maxWidth: \"300px\" }}\r\n//                         />\r\n//                       )}\r\n//                       <div style={{ marginTop: \"10px\" }}>\r\n//                         <button onClick={() => startEditing(post)}>\r\n//                           <Pencil size={16} /> Edit\r\n//                         </button>\r\n//                         <button\r\n//                           onClick={() => handleDelete(post._id)}\r\n//                           style={{ marginLeft: 8 }}\r\n//                         >\r\n//                           <Trash size={16} /> Delete\r\n//                         </button>\r\n//                       </div>\r\n//                     </>\r\n//                   )}\r\n//                 </div>\r\n//               ))\r\n//             )}\r\n//           </div>\r\n//         );\r\n\r\n//       case \"comments\":\r\n//         return <h2>View Comments on Your Posts</h2>;\r\n\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"admin-dashboard\">\r\n//       <aside className=\"sidebar\">\r\n//         <h1>Admin Panel</h1>\r\n//         <ul>\r\n//           <li onClick={() => setSelectedOption(\"upload\")}>\r\n//             <FilePlus className=\"icon\" /> Upload Post\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"view\")}>\r\n//             <LayoutList className=\"icon\" /> View My Posts\r\n//           </li>\r\n//           <li onClick={() => setSelectedOption(\"comments\")}>\r\n//             <MessageSquareText className=\"icon\" /> View Comments\r\n//           </li>\r\n//         </ul>\r\n//       </aside>\r\n//       <main className=\"content\">{renderContent()}</main>\r\n//     </div>\r\n\r\n\r\n// //newww\r\n\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n// export default AdminDashboard;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}