{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import UpdateProfile from './components/UpdateProfile';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n\n//     return () => unsubscribe(); // cleanup\n//   }, []);\n\n//   // ✅ Check profile only after user is authenticated\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       try {\n//         if (user?.email && user.email !== \"hari1018vinod@gmail.com\") {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             navigate(\"/update-profile\");\n//           }\n//         }\n//       } catch (err) {\n//         console.error(\"Error checking profile:\", err);\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, navigate]);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   if (user) {\n//     return user.email === \"hari1018vinod@gmail.com\"\n//       ? <AdminDashboard user={user} handleLogout={handleLogout} />\n//       : <UserDashboard user={user} handleLogout={handleLogout} />;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [adminCodeInput, setAdminCodeInput] = useState('');\n//   const [adminCodeVerified, setAdminCodeVerified] = useState(false);\n//   const [profileCompleted, setProfileCompleted] = useState(true);\n//   const navigate = useNavigate();\n\n//   // Watch for sign-in\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n//     return () => unsubscribe();\n//   }, []);\n\n//   // Check profile only if not admin\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       if (user && !adminCodeVerified) {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             setProfileCompleted(false);\n//             navigate(\"/update-profile\");\n//           }\n//         } catch (err) {\n//           console.error(\"Error checking profile:\", err);\n//         }\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, adminCodeVerified, navigate]);\n\n//   const handleAdminCodeChange = (e) => {\n//     setAdminCodeInput(e.target.value);\n//   };\n\n//   const handleAdminCodeVerify = () => {\n//     if (adminCodeInput === '0618') {\n//       setAdminCodeVerified(true);\n//       alert(\"Admin code verified. Now sign in with Google.\");\n//     } else {\n//       alert(\"Incorrect admin code.\");\n//     }\n//   };\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         setUser(null);\n//         setAdminCodeVerified(false);\n//         setAdminCodeInput('');\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   // UI based on login state\n//   if (user) {\n//     if (adminCodeVerified) {\n//       return <AdminDashboard user={user} handleLogout={handleLogout} />;\n//     }\n\n//     return profileCompleted ? (\n//       <UserDashboard user={user} handleLogout={handleLogout} />\n//     ) : null;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n\n//       <div className=\"admin-login-box\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Enter admin code (optional)\"\n//           value={adminCodeInput}\n//           onChange={handleAdminCodeChange}\n//           className=\"admin-input\"\n//         />\n//        <button className=\"verify-btn\" onClick={handleAdminCodeVerify}>\n//   Verify Code\n// </button>\n\n//       </div>\n\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import UpdateProfile from './components/UpdateProfile';\n\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n\n//     return () => unsubscribe(); // cleanup\n//   }, []);\n\n//   // ✅ Check profile only after user is authenticated\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       try {\n//         if (user?.email && user.email !== \"hari1018vinod@gmail.com\") {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             navigate(\"/update-profile\");\n//           }\n//         }\n//       } catch (err) {\n//         console.error(\"Error checking profile:\", err);\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, navigate]);\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   if (user) {\n//     return user.email === \"hari1018vinod@gmail.com\"\n//       ? <AdminDashboard user={user} handleLogout={handleLogout} />\n//       : <UserDashboard user={user} handleLogout={handleLogout} />;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\n// import { auth, provider } from './firebase';\n// import googleLogo from './images/google-logo.png';\n// import AdminDashboard from './components/AdminDashboard';\n// import UserDashboard from './components/UserDashboard';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [adminCodeInput, setAdminCodeInput] = useState('');\n//   const [adminCodeVerified, setAdminCodeVerified] = useState(false);\n//   const [profileCompleted, setProfileCompleted] = useState(true);\n//   const navigate = useNavigate();\n\n//   // Watch for sign-in\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n//       setUser(currentUser);\n//     });\n//     return () => unsubscribe();\n//   }, []);\n\n//   // Check profile only if not admin\n//   useEffect(() => {\n//     const checkUserProfile = async () => {\n//       if (user && !adminCodeVerified) {\n//         try {\n//           const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n//           const userData = res.data;\n\n//           if (!userData.profileCompleted) {\n//             setProfileCompleted(false);\n//             navigate(\"/update-profile\");\n//           }\n//         } catch (err) {\n//           console.error(\"Error checking profile:\", err);\n//         }\n//       }\n//     };\n\n//     if (user) {\n//       checkUserProfile();\n//     }\n//   }, [user, adminCodeVerified, navigate]);\n\n//   const handleAdminCodeChange = (e) => {\n//     setAdminCodeInput(e.target.value);\n//   };\n\n//   const handleAdminCodeVerify = () => {\n//     if (adminCodeInput === '0618') {\n//       setAdminCodeVerified(true);\n//       alert(\"Admin code verified. Now sign in with Google.\");\n//     } else {\n//       alert(\"Incorrect admin code.\");\n//     }\n//   };\n\n//   const signInWithGoogle = () => {\n//     signInWithPopup(auth, provider)\n//       .then((result) => {\n//         console.log('User signed in:', result.user);\n//       })\n//       .catch((error) => {\n//         console.error('Error during sign-in:', error);\n//         alert('Sign-in failed');\n//       });\n//   };\n\n//   const handleLogout = () => {\n//     signOut(auth)\n//       .then(() => {\n//         setUser(null);\n//         setAdminCodeVerified(false);\n//         setAdminCodeInput('');\n//         console.log(\"User signed out\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Logout error:\", error);\n//       });\n//   };\n\n//   // UI based on login state\n//   if (user) {\n//     if (adminCodeVerified) {\n//       return <AdminDashboard user={user} handleLogout={handleLogout} />;\n//     }\n\n//     return profileCompleted ? (\n//       <UserDashboard user={user} handleLogout={handleLogout} />\n//     ) : null;\n//   }\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1>Welcome to The Better India Comments</h1>\n\n//       <div className=\"admin-login-box\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Enter admin code (optional)\"\n//           value={adminCodeInput}\n//           onChange={handleAdminCodeChange}\n//           className=\"admin-input\"\n//         />\n//        <button className=\"verify-btn\" onClick={handleAdminCodeVerify}>\n//   Verify Code\n// </button>\n\n//       </div>\n\n//       <button className=\"google-btn\" onClick={signInWithGoogle}>\n//         <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n//         Sign in with Google\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}