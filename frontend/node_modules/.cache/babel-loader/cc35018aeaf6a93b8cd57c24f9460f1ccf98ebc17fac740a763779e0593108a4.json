{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hariv\\\\Music\\\\the-better-india-comments\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth, provider } from './firebase';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\nimport UserDashboard from './components/UserDashboard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [adminCodeInput, setAdminCodeInput] = useState('');\n  const [adminCodeVerified, setAdminCodeVerified] = useState(false);\n  const [profileCompleted, setProfileCompleted] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const checkUserProfile = async () => {\n      if (user && user.email !== \"hari1018vinod@gmail.com\" && !adminCodeVerified) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n          const userData = res.data;\n          if (!userData.profileCompleted) {\n            setProfileCompleted(false);\n            navigate(\"/update-profile\");\n          }\n        } catch (err) {\n          console.error(\"Error checking profile:\", err);\n        }\n      }\n    };\n    if (user) {\n      checkUserProfile();\n    }\n  }, [user, adminCodeVerified, navigate]);\n  const handleAdminCodeChange = e => {\n    setAdminCodeInput(e.target.value);\n  };\n  const handleAdminCodeVerify = () => {\n    if (adminCodeInput === '0618') {\n      setAdminCodeVerified(true);\n      alert(\"Admin code verified. Now sign in with Google.\");\n    } else {\n      alert(\"Incorrect admin code.\");\n    }\n  };\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      console.log('User signed in:', result.user);\n    }).catch(error => {\n      console.error('Error during sign-in:', error);\n      alert('Sign-in failed');\n    });\n  };\n  const handleLogout = () => {\n    signOut(auth).then(() => {\n      setUser(null);\n      setAdminCodeVerified(false);\n      setAdminCodeInput('');\n      console.log(\"User signed out\");\n    }).catch(error => {\n      console.error(\"Logout error:\", error);\n    });\n  };\n  if (user) {\n    // Admin without needing code\n    if (user.email === \"hari1018vinod@gmail.com\") {\n      return /*#__PURE__*/_jsxDEV(AdminDashboard, {\n        user: user,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Other users with verified admin code\n    if (adminCodeVerified) {\n      return /*#__PURE__*/_jsxDEV(AdminDashboard, {\n        user: user,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Regular user dashboard\n    return profileCompleted ? /*#__PURE__*/_jsxDEV(UserDashboard, {\n      user: user,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this) : null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to The Better India Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter admin code (optional)\",\n        value: adminCodeInput,\n        onChange: handleAdminCodeChange,\n        className: \"admin-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"verify-btn\",\n        onClick: handleAdminCodeVerify,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"google-btn\",\n      onClick: signInWithGoogle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: googleLogo,\n        alt: \"Google logo\",\n        className: \"google-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \"Sign in with Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oT/Izsps18ybPQ6Tlwm4oQ7Ny+8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","signInWithPopup","onAuthStateChanged","signOut","auth","provider","googleLogo","AdminDashboard","UserDashboard","useNavigate","axios","jsxDEV","_jsxDEV","App","_s","user","setUser","adminCodeInput","setAdminCodeInput","adminCodeVerified","setAdminCodeVerified","profileCompleted","setProfileCompleted","navigate","unsubscribe","currentUser","checkUserProfile","email","res","get","userData","data","err","console","error","handleAdminCodeChange","e","target","value","handleAdminCodeVerify","alert","signInWithGoogle","then","result","log","catch","handleLogout","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hariv/Music/the-better-india-comments/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { signInWithPopup, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth, provider } from './firebase';\nimport googleLogo from './images/google-logo.png';\nimport AdminDashboard from './components/AdminDashboard';\nimport UserDashboard from './components/UserDashboard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [adminCodeInput, setAdminCodeInput] = useState('');\n  const [adminCodeVerified, setAdminCodeVerified] = useState(false);\n  const [profileCompleted, setProfileCompleted] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    const checkUserProfile = async () => {\n      if (user && user.email !== \"hari1018vinod@gmail.com\" && !adminCodeVerified) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/users/byEmail/${user.email}`);\n          const userData = res.data;\n\n          if (!userData.profileCompleted) {\n            setProfileCompleted(false);\n            navigate(\"/update-profile\");\n          }\n        } catch (err) {\n          console.error(\"Error checking profile:\", err);\n        }\n      }\n    };\n\n    if (user) {\n      checkUserProfile();\n    }\n  }, [user, adminCodeVerified, navigate]);\n\n  const handleAdminCodeChange = (e) => {\n    setAdminCodeInput(e.target.value);\n  };\n\n  const handleAdminCodeVerify = () => {\n    if (adminCodeInput === '0618') {\n      setAdminCodeVerified(true);\n      alert(\"Admin code verified. Now sign in with Google.\");\n    } else {\n      alert(\"Incorrect admin code.\");\n    }\n  };\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        console.log('User signed in:', result.user);\n      })\n      .catch((error) => {\n        console.error('Error during sign-in:', error);\n        alert('Sign-in failed');\n      });\n  };\n\n  const handleLogout = () => {\n    signOut(auth)\n      .then(() => {\n        setUser(null);\n        setAdminCodeVerified(false);\n        setAdminCodeInput('');\n        console.log(\"User signed out\");\n      })\n      .catch((error) => {\n        console.error(\"Logout error:\", error);\n      });\n  };\n\n  if (user) {\n    // Admin without needing code\n    if (user.email === \"hari1018vinod@gmail.com\") {\n      return <AdminDashboard user={user} handleLogout={handleLogout} />;\n    }\n\n    // Other users with verified admin code\n    if (adminCodeVerified) {\n      return <AdminDashboard user={user} handleLogout={handleLogout} />;\n    }\n\n    // Regular user dashboard\n    return profileCompleted ? (\n      <UserDashboard user={user} handleLogout={handleLogout} />\n    ) : null;\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1>Welcome to The Better India Comments</h1>\n\n      <div className=\"admin-login-box\">\n        <input\n          type=\"password\"\n          placeholder=\"Enter admin code (optional)\"\n          value={adminCodeInput}\n          onChange={handleAdminCodeChange}\n          className=\"admin-input\"\n        />\n        <button className=\"verify-btn\" onClick={handleAdminCodeVerify}>\n          Verify Code\n        </button>\n      </div>\n\n      <button className=\"google-btn\" onClick={signInWithGoogle}>\n        <img src={googleLogo} alt=\"Google logo\" className=\"google-icon\" />\n        Sign in with Google\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}